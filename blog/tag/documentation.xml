<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>oVirt</title>
  <subtitle>Tag: Documentation</subtitle>
  <id>http://ovirt.org/blog/</id>
  <link href="http://ovirt.org/blog/"/>
  <link href="http://ovirt.org/blog/tag/documentation.xml" rel="self"/>
  <updated>2019-05-27T15:35:00+00:00</updated>
  <author>
    <name/>
  </author>
  <entry>
    <title>Integrating Kibana/Elasticsearch on Top of OpenShift with oVirt Engine SSO</title>
    <link rel="alternate" href="http://ovirt.org/blog/2017/05/openshift-openId-integration-with-engine-sso.html"/>
    <id>http://ovirt.org/blog/2017/05/openshift-openId-integration-with-engine-sso.html</id>
    <published>2017-05-16T12:35:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Ravi Nori</name>
    </author>
    <content type="html">&lt;p&gt;oVirt Engine provides a powerful way to manage users and domains using the oVirt Engine AAA extensions. oVirt Engine supports many different LDAP server types for authentication using the &lt;code&gt;ovirt-engine-extension-aaa-ldap&lt;/code&gt; extension and supports managing internal users using the &lt;code&gt;ovirt-engine-extension-aaa-jdbc&lt;/code&gt; extension. Clients can use the powerful oVirt Engine user management in their applications by using the OAuth2 or OpenId Connect end points provided by oVirt Engine SSO to authenticate users in their applications.&lt;/p&gt;

&lt;p&gt;Below is step-by-step instructions on how to integrate Kibana/Elasticsearch on top of OpenShift with oVirt Engine SSO. The instructions should work for any client application that can be configured to use a OAuth2 or OpenID Connect server to authenticate its users.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;The goal is to integrate Kibana/Elasticsearch on top of OpenShift with oVirt Engine SSO, so existing engine users can access Kibana/Elasticsearch without reauthentication (we don't need to maintain authentication configuration separately for oVirt Engine and Kibana/Elasticsearch).&lt;/p&gt;

&lt;p&gt;The integration requires a fully working and configured oVirt Engine instance on oVirt Engine host and a fully working and configured instance of Kibana/Elasticsearch on top of OpenShift on the OpenShift host.&lt;/p&gt;

&lt;h2 id="installing-kibanaelasticsearch-and-openshift-backend"&gt;Installing Kibana/Elasticsearch and OpenShift Backend&lt;/h2&gt;

&lt;p&gt;Install Kibana/Elasticsearch/OpenShift on CentOS7 or RHEL 7.3 as described in https://www.ovirt.org/develop/release-management/features/metrics/setting-up-viaq-logging/&lt;/p&gt;

&lt;h2 id="installing-ovirt-engine"&gt;Installing oVirt Engine&lt;/h2&gt;

&lt;p&gt;Setup oVirt Engine on a separate host ovirt-engine.example.com as described in https://www.ovirt.org/download/&lt;/p&gt;

&lt;h2 id="setting-up-ovirt-engine-certificate-on-openshift-machine"&gt;Setting up oVirt Engine certificate on OpenShift machine&lt;/h2&gt;

&lt;p&gt;Get the oVirt Engine CA as described here https://www.ovirt.org/documentation/how-to/guest-console/connect-to-spice-console-without-portal/&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;scp root@&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OVIRT&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;:/etc/pki/ovirt-engine/ca.pem &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CA_FILE&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add the certificate to system-wide trusted certificates. Copy the certificate to /etc/pki/ca-trust/source/anchors/ and run update-ca-trust&lt;/p&gt;

&lt;h2 id="register-a-new-sso-client-on-ovirt-engine-host"&gt;Register a New sso Client on ovirt-engine Host&lt;/h2&gt;

&lt;p&gt;Run the client registration tool ovirt-register-sso-client to register a new sso client. The tool will prompt the user to enter the client id, location of the client certificate (downloaded to oVirt Engine host) and the callback url prefix. Make note of the client id and client secret generated by the tool. The client id and client secret need to be entered in the master configuration file on the OpenShift host to configure authentication with oVirt Engine. The client registration tool is only available in oVirt Engine 4.2 and later.&lt;/p&gt;

&lt;h2 id="setup-oauthconfig-on-kibanaelasticsearchopenshift-host"&gt;Setup oauthconfig on Kibana/Elasticsearch/OpenShift Host&lt;/h2&gt;

&lt;p&gt;On Kibana/Elasticsearch/OpenShift host edit /etc/origin/master/master-config.yaml to setup oauthconfig as below. For oVirt Engine 4.1, see note below.&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;oauthConfig&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;assetPublicURL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://openshift.example.com:8443/console/&lt;/span&gt;
  &lt;span class="na"&gt;grantConfig&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;auto&lt;/span&gt;
  &lt;span class="na"&gt;identityProviders&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;challenge&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;login&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;mappingMethod&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;claim&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;my_openid_connect&lt;/span&gt;
    &lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
      &lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;OpenIDIdentityProvider&lt;/span&gt;
      &lt;span class="na"&gt;clientID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;client id specified in previous step&amp;gt;&lt;/span&gt;
      &lt;span class="na"&gt;clientSecret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;client id generated in previous step&amp;gt;&lt;/span&gt;
      &lt;span class="na"&gt;extraScopes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;ovirt-app-api&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;ovirt-ext=auth:sequence-priority=~&lt;/span&gt;
      &lt;span class="na"&gt;extraAuthorizeParameters&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;include_granted_scopes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;true"&lt;/span&gt;
&lt;span class="na"&gt;claims&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;custom_id_claim&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;sub&lt;/span&gt;
        &lt;span class="na"&gt;preferredUsername&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;preferred_username&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;email&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;nickname&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;given_name&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;name&lt;/span&gt;
        &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;custom_email_claim&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;email&lt;/span&gt;
      &lt;span class="na"&gt;urls&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;authorize&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://ovirt-engine.example.com/ovirt-engine/sso/openid/authorize&lt;/span&gt;
        &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://ovirt-engine.example.com/ovirt-engine/sso/openid/token&lt;/span&gt;
  &lt;span class="na"&gt;masterCA&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ca-bundle.crt&lt;/span&gt;
  &lt;span class="na"&gt;masterPublicURL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://openshift.example.com:8443&lt;/span&gt;
  &lt;span class="na"&gt;masterURL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://openshift.example.com:8443&lt;/span&gt;
  &lt;span class="na"&gt;sessionConfig&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;sessionMaxAgeSeconds&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;3600&lt;/span&gt;
    &lt;span class="na"&gt;sessionName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ssn&lt;/span&gt;
    &lt;span class="na"&gt;sessionSecretsFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/etc/origin/master/session-secrets.yaml&lt;/span&gt;
  &lt;span class="na"&gt;tokenConfig&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;accessTokenMaxAgeSeconds&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;86400&lt;/span&gt;
    &lt;span class="na"&gt;authorizeTokenMaxAgeSeconds&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;500&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In oVirt engine 4.1 the authorize and token endpoints point to oauth endpoints.&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;      urls:
        authorize: https://ovirt-engine.example.com/ovirt-engine/sso/oauth/authorize
        token: https://ovirt-engine.example.com/ovirt-engine/sso/oauth/token
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="restart-ovirt-engine"&gt;Restart oVirt Engine&lt;/h2&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl restart ovirt-engine
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="restart-origin-master-and-origin-node-on-openshift-host"&gt;Restart origin-master and origin-node on OpenShift Host&lt;/h2&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl restart origin-master
systemctl restart origin-node
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="configure-hostnames"&gt;Configure hostnames&lt;/h2&gt;

&lt;p&gt;Make sure the hosts are reachable by their hostnames if required add host aliases in /etc/hosts&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight conf"&gt;&lt;code&gt;&lt;span class="m"&gt;10&lt;/span&gt;.&lt;span class="m"&gt;16&lt;/span&gt;.&lt;span class="m"&gt;19&lt;/span&gt;.&lt;span class="m"&gt;48&lt;/span&gt; &lt;span class="n"&gt;openshift&lt;/span&gt;.&lt;span class="n"&gt;example&lt;/span&gt;.&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;kibana&lt;/span&gt;.&lt;span class="n"&gt;example&lt;/span&gt;.&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;mux&lt;/span&gt;.&lt;span class="n"&gt;example&lt;/span&gt;.&lt;span class="n"&gt;com&lt;/span&gt;

&lt;span class="m"&gt;10&lt;/span&gt;.&lt;span class="m"&gt;10&lt;/span&gt;.&lt;span class="m"&gt;116&lt;/span&gt;.&lt;span class="m"&gt;110&lt;/span&gt; &lt;span class="n"&gt;ovirtengine&lt;/span&gt;.&lt;span class="n"&gt;example&lt;/span&gt;.&lt;span class="n"&gt;com&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="grant-permissions"&gt;Grant Permissions&lt;/h2&gt;

&lt;p&gt;The user needs to be granted permissions manually in OpenShift, using the console UI or the command line, so that the user can view the data in Kibana. Accessing https://kibana.example.com should redirect to the engine login page. Enter credentials and login will redirect user back to Kibana.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Using oVirt and Vagrant</title>
    <link rel="alternate" href="http://ovirt.org/blog/2017/02/using-oVirt-vagrant.html"/>
    <id>http://ovirt.org/blog/2017/02/using-oVirt-vagrant.html</id>
    <published>2017-02-10T21:00:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Marc Young</name>
    </author>
    <content type="html">&lt;p&gt;Introducing oVirt virtual machine management via Vagrant.&lt;/p&gt;

&lt;p&gt;In this short tutorial I'm going to give a brief introduction on how to use &lt;a href="http://vagrantup.com"&gt;vagrant&lt;/a&gt; to manage oVirt with the new &lt;a href="http://www.github.com/myoung34/vagrant-ovirt4"&gt;community developed oVirt v4 Vagrant provider&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="background"&gt;Background&lt;/h2&gt;

&lt;p&gt;Vagrant is a way to tool to create portable and reproducible environments. We can use it to provision and manage virtual machines in oVirt by managing a base box (small enough to fit in github as an artifact) and a Vagrantfile. The Vagrantfile is the piece of configuration that defines everything about the virtual machines: memory, cpu, base image, and any other configuration that is specific to the hosting environment.&lt;/p&gt;

&lt;h2 id="prerequisites"&gt;Prerequisites&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;A fully working and configured oVirt cluster of any size&lt;/li&gt;
  &lt;li&gt;A system capable of compiling and running the &lt;a href="http://github.com/ovirt/ovirt-engine-sdk-ruby"&gt;oVirt ruby SDK gem&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Vagrant 1.8 or later&lt;/li&gt;
  &lt;li&gt;The oVirt vagrant plugin installed via &lt;code&gt;$ vagrant plugin install vagrant-ovirt4&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="the-vagrantfile"&gt;The Vagrantfile&lt;/h2&gt;

&lt;p&gt;To start off, I'm going to use this Vagrantfile:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Vagrant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"2"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'ovirt4'&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hostname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"test-vm"&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;box_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'https://github.com/myoung34/vagrant-ovirt4/blob/master/example_box/dummy.box?raw=true'&lt;/span&gt;

  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;network&lt;/span&gt; &lt;span class="ss"&gt;:private_network&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;:ip&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'192.168.56.100'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:nictype&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'virtio'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:netmask&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'255.255.255.0'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;#normal network configuration&lt;/span&gt;
    &lt;span class="ss"&gt;:ovirt__ip&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'192.168.2.198'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:ovirt__network_name&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'ovirtmgmt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:ovirt__gateway&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'192.168.2.125'&lt;/span&gt; &lt;span class="c1"&gt;# oVirt specific information, overwrites previous on oVirt provider&lt;/span&gt;

  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;provider&lt;/span&gt; &lt;span class="ss"&gt;:ovirt4&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'https://ovirt/ovirt-engine/api'&lt;/span&gt;
    &lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"admin@internal"&lt;/span&gt;
    &lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"mypassword"&lt;/span&gt;
    &lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;insecure&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;cluster&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Default'&lt;/span&gt;
    &lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'vagrant-centos7'&lt;/span&gt;
    &lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;console&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'vnc'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the configuration file, there are some pieces on which to elaborate. The URL, password, and username should be self-explanatory. The &lt;code&gt;config.vm.network&lt;/code&gt; block has some special mappings (prefixed by &lt;code&gt;ovirt__&lt;/code&gt;) so that it can be used in any provider, as well as oVirt. Vagrantfiles can manage lifecycles across providers, which is why the oVirt-specific mappings are in a &lt;code&gt;config.vm.provider :ovirt4&lt;/code&gt; configuration block as well.&lt;/p&gt;

&lt;p&gt;Within our &lt;code&gt;ovirt4&lt;/code&gt; configuration section, we have set SSL verify to off (to allow self-signed certificates), the cluster is set to &lt;code&gt;Default&lt;/code&gt; (and available in the oVirt UI), and the template to use as a starting point is &lt;code&gt;vagrant-centos7&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The base template will need to be created per your environment, but a starting helper script for redhat based distributions such as CentOS &lt;a href="https://github.com/myoung34/vagrant-ovirt4/blob/master/tools/prepare_redhat_for_box.sh"&gt;is available here&lt;/a&gt;. It basically installs some base packages like the oVirt agent but also sets up a local user &lt;code&gt;vagrant&lt;/code&gt; inside the VM that is required to proceed. Please read through it carefully.&lt;/p&gt;

&lt;h2 id="getting-to-it"&gt;Getting to it&lt;/h2&gt;

&lt;p&gt;In the directory where the &lt;code&gt;Vagrantfile&lt;/code&gt; lives, we can create and start a VM.&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant up
Bringing machine &lt;span class="s1"&gt;'default'&lt;/span&gt; up with &lt;span class="s1"&gt;'ovirt4'&lt;/span&gt; provider...
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Creating VM with the following settings...
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default:  &lt;span class="nt"&gt;--&lt;/span&gt; Name:          test-vm
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default:  &lt;span class="nt"&gt;--&lt;/span&gt; Cluster:       Default
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default:  &lt;span class="nt"&gt;--&lt;/span&gt; Template:      vagrant-centos7
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default:  &lt;span class="nt"&gt;--&lt;/span&gt; Console Type:  vnc
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Waiting &lt;span class="k"&gt;for &lt;/span&gt;VM to become &lt;span class="s2"&gt;"ready"&lt;/span&gt; to start...
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Starting VM.
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Waiting &lt;span class="k"&gt;for &lt;/span&gt;VM to get an IP address...
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Machine is booted and ready &lt;span class="k"&gt;for &lt;/span&gt;use!
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Rsyncing folder: /home/vagrant/ &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; /vagrant
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Setting hostname...
    default:
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair &lt;span class="k"&gt;for &lt;/span&gt;better security.
    default:
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest &lt;span class="k"&gt;if &lt;/span&gt;it&lt;span class="s1"&gt;'s present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you look in oVirt we now have a virtual machine named &lt;code&gt;test-vm&lt;/code&gt; running.&lt;/p&gt;

&lt;p&gt;&lt;img alt="vagrant vm listed" width="2042" height="792" src="/images/vagrant-ovirt-up-1.png?1560777613" /&gt;&lt;/p&gt;

&lt;p&gt;We can do things such as manage snapshots:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant snapshot list
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Retrieving list of snapshots...
id     description     date

&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant snapshot save somename
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Creating snapshot...

&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant snapshot list
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Retrieving list of snapshots...
                                  id     description                          date
3dd34cbf-4698-446f-82bb-00ac66931411        somename     2017-02-10T05:34:53-06:00

&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant snapshot delete 3dd34cbf-4698-446f-82bb-00ac66931411
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Deleting snapshot...

&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant snapshot list
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Retrieving list of snapshots...
id     description     date
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can SSH into the box or run commands via SSH:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant ssh
Last login: Wed Feb  8 21:27:23 2017 from marc-pc

&lt;span class="nv"&gt;$ &lt;/span&gt;hostname
test-vm
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;logout
&lt;/span&gt;Connection to 192.168.2.238 closed.

&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant ssh &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s1"&gt;'hostname; whoami'&lt;/span&gt;
test-vm
vagrant
Connection to 192.168.2.238 closed.

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can also run &lt;a href="https://www.vagrantup.com/docs/provisioning/"&gt;provisioners&lt;/a&gt; against the machine. Add this to your Vagrantfile:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;provision&lt;/span&gt; &lt;span class="s2"&gt;"shell"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;inline: &lt;/span&gt;&lt;span class="s2"&gt;"whoami &amp;gt;&amp;gt; /home/vagrant/somefile"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let's see what happens when we use it:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant provision
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Rsyncing folder: /home/vagrant/ &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; /vagrant
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Running provisioner: shell...
    default: Running: inline script

&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant ssh &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s1"&gt;'cat ~/somefile'&lt;/span&gt;
root
Connection to 192.168.2.238 closed.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lastly, we can tear down the VM and all of its artifacts:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant destroy &lt;span class="nt"&gt;-f&lt;/span&gt;
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Halting VM...
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Waiting &lt;span class="k"&gt;for &lt;/span&gt;VM to shutdown...
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Removing VM...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>oVirt Community Newsletter December 2016</title>
    <link rel="alternate" href="http://ovirt.org/blog/2017/01/oVirt-December-2016-newsletter.html"/>
    <id>http://ovirt.org/blog/2017/01/oVirt-December-2016-newsletter.html</id>
    <published>2017-01-19T21:00:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Brian Proffitt</name>
    </author>
    <content type="html">&lt;p&gt;It's a new year with new opportunities for oVirt to show up its virtualization features! We're getting ready for DevConf.CZ in Brno next week, and FOSDEM in Brussels the week after that! We look forward to meeting European developers and sysadmins to share your experiences!&lt;/p&gt;

&lt;p&gt;Here's what happened in December of 2016.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="software-releases"&gt;Software Releases&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOI9cY"&gt;oVirt 4.0.6 Release is now available&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="in-the-community"&gt;In the Community&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOLCrW"&gt;Happy New Documentation!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iONDUR"&gt;oVirt System Tests to the Rescue!—How to Run End-to-End oVirt Tests on Your Patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOTAkD"&gt;CI Please Build—How to build your oVirt project on-demand&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOPUzf"&gt;The Need for Speed—Coming Changes in oVirt's CI Standards&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOPARp"&gt;Еxtension of iptables Rules on oVirt 4.0 Hosts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOKeW6"&gt;New oVirt Project Underway&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="deep-dives-and-technical-discussions"&gt;Deep Dives and Technical Discussions&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOILiD"&gt;KVM/Linux Nested Virtualization Support For ARM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOWDtj"&gt;Virtual Machines in Kubernetes? How and what makes sense?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iORd1j"&gt;ANNOUNCE: New libvirt project Go XML parser model&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOOEwc"&gt;Using OVN with KVM and Libvirt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iP0ne5"&gt;New libvirt project Go language bindings&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOVilZ"&gt;CI tools testing lab: Making it do useful work&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOOBRa"&gt;CI tools testing lab: Integrating Jenkins and adding Zuul UI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOP1a8"&gt;CI tools testing lab: Adding Zuul Merger&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOUZYn"&gt;CI tools testing lab: Setting up Zuul Server&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iP0CG1"&gt;CI tools testing lab: Adding Gerrit&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOSvtc"&gt;CI tools testing lab: Initial setup with Jenkins&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="downstream-news"&gt;Downstream News&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://red.ht/2jvB5mf"&gt;Debugging a kernel in QEMU/libvirt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://red.ht/2iLW5YU"&gt;Five Reasons to Switch from vSphere to Red Hat Virtualization&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://red.ht/2hW9N7B"&gt;Red Hat scoops Best Virtualization Product at the V3 Technology Awards 2016&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Happy New Documentation!</title>
    <link rel="alternate" href="http://ovirt.org/blog/2017/01/happy-new-documentation.html"/>
    <id>http://ovirt.org/blog/2017/01/happy-new-documentation.html</id>
    <published>2017-01-16T14:55:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Brian Proffitt</name>
    </author>
    <content type="html">&lt;p&gt;The oVirt Project is pleased to announce the availability of &lt;a href="/documentation/"&gt;all-new principal documentation&lt;/a&gt; for the oVirt 4.0 branch.&lt;/p&gt;

&lt;p&gt;There are many people out there who are content to use software without documentation, preferring to muddle through the software based on past experience with similar software or just the desire to put the software through its paces.&lt;/p&gt;

&lt;p&gt;We all do this; I could not tell you the last time I looked at documentation for Firefox or Chrome, because I've been using browsers for over 20 years and seriously, what else is there to learn? Until I learn about a cool new feature from a friend or a web site.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;In a software community project, one of the biggest things a community must do is to provide proper onboarding to the project's result. This means:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Explaining what the software is&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Providing a clear path to getting the software&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Demonstrating how to use the software&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All three of these onboarding requirements must be done right in order for onboarding to work successfully. Documenation, then, fulfills the third requirement: showing how software can be used. Not every one will need it, but for those users who do need it, it is very nice to have.&lt;/p&gt;

&lt;p&gt;To that end, the oVirt Project has, with the help of the Red Hat Content Services team, created a new and complete set of &lt;a href="/documentation/"&gt;documentation&lt;/a&gt; based on the downstream documentation for Red Hat Virtualization 4.0.&lt;/p&gt;

&lt;p&gt;You may be thinking that this is a backwards process. Shouldn't the upstream documentation be the basis of the downstream? And you would be right… normally that is how the flow of documentation, like code, goes. But the upstream documentation for oVirt has been incomplete and sadly out of sync for quite some time, so it was though that "bootstrapping" the downstream docs as a reset would be a good place to start.&lt;/p&gt;

&lt;p&gt;Even these guides themselves are incomplete. Downstream references have been removed, but some still remain. And, since the feature set for oVirt is always a bit larger than its downstream products, there are sure to be features that have yet to be described. This is where, we hope, you come in.&lt;/p&gt;

&lt;p&gt;Now that there is a strong base of documentation with which to work, we hope you will visit the oVirt site's &lt;a href="https://github.com/oVirt/ovirt-site"&gt;GitHub repo&lt;/a&gt; and submit changes and additions as needed. In this way, the documention will be a living, breathing document that will not only provide oVirt users and admins a great reference, but also be the starting point for the multiple downstream products that use oVirt as their base.&lt;/p&gt;

&lt;p&gt;The principal documentation includes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/quickstart/quickstart-guide/"&gt;Quick Start Guide&lt;/a&gt;.&lt;/strong&gt; This document is a step-by-step guide for first-time users to install and configure a basic oVirt environment and create virtual machines.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/install-guide/Installation_Guide"&gt;oVirt Installation Guide&lt;/a&gt;.&lt;/strong&gt; The installation and configuration of an oVirt Engine, the installation and configuration of hosts and attaching existing FCP storage to your oVirt environment.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/upgrade-guide/upgrade-guide"&gt;oVirt Upgrade Guide&lt;/a&gt;.&lt;/strong&gt; This guide covers updating your oVirt environment between minor releases, and upgrading to the next major version.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/admin-guide/administration-guide/"&gt;oVirt Administration Guide&lt;/a&gt;.&lt;/strong&gt; A master guide to administering an oVirt environment.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/vmm-guide/Virtual_Machine_Management_Guide"&gt;oVirt Virtual Machine Management Guide&lt;/a&gt;.&lt;/strong&gt; Most virtual machine tasks in oVirt can be performed in both the User Portal and Administration Portal. However, the user interface differs between each portal, and some administrative tasks require access to the Administration Portal. Tasks that can only be performed in the Administration Portal will be described as such in this guide.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/intro-admin/Introduction_to_the_Administration_Portal"&gt;oVirt Introduction to the Administration Portal&lt;/a&gt;.&lt;/strong&gt; A straightforward howto for the Administration portal.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/intro-user/Introduction_to_the_User_Portal"&gt;oVirt Introduction to the User Portal&lt;/a&gt;.&lt;/strong&gt; A straightforward howto for the User portal.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/self-hosted/Self-Hosted_Engine_Guide"&gt;oVirt Self-Hosted Engine Guide&lt;/a&gt;.&lt;/strong&gt; A self-hosted engine is a virtualized environment in which the oVirt Engine runs on a virtual machine on the hosts managed by that engine. The virtual machine is created as part of the host configuration, and the Engine is installed and configured in parallel to the host configuration process. This guide will walk you through how to setup and run this feature.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/data-warehouse/Data_Warehouse_Guide"&gt;oVirt Data Warehouse Guide&lt;/a&gt;.&lt;/strong&gt; The oVirt Engine includes a comprehensive management history database, which can be utilized by any application to extract a range of information at the data center, cluster, and host levels. Installing Data Warehouse creates the ovirt_engine_history database, to which the Engine is configured to log information for reporting purposes. The Data Warehouse component is optional, but if you want to use it, this guide will help.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The oVirt Project would specifically like to thank Derek Cadzow of Content Services and Shaun McCance of the Open Source and Standards teams for their invaluable assistance on this bootstrapping project! We hope you find this documentation useful and welcome any and all feedback as part of the ongoing efforts to make our onboarding process strong.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>New oVirt Video Tutorials Available</title>
    <link rel="alternate" href="http://ovirt.org/blog/2016/09/new-ovirt-video-tutorials-available.html"/>
    <id>http://ovirt.org/blog/2016/09/new-ovirt-video-tutorials-available.html</id>
    <published>2016-09-30T17:05:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Brian Proffitt</name>
    </author>
    <content type="html">&lt;p&gt;Recently the oVirt community was pretty excited to find a &lt;a href="http://www.citsnc.com/?page_id=542"&gt;series of new videos&lt;/a&gt; walking users through some key steps in installing and using oVirt.&lt;/p&gt;

&lt;p&gt;The video were created by Nathan Llaneza from Coastal IT Solutions, who also teaches at a local community college.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;"We needed to be able to give our students virtual machines that could be utilized from anywhere," Llaneza explained. "We have finally been granted our second server, so now we are going to be able to let more instructors use the oVirt environment. I am building these videos to encourage more of our instructors to make the switch from local VMs in the classroom to the oVirt platform."&lt;/p&gt;

&lt;p&gt;About three years ago LLanza was researching an alternative for the local VMs, and he concluded that between oVirt, VMware, and Openstack, oVirt suited the college's needs best. According to Llaneza, some of the deciding factors were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;"Ability to access to the VM console without additional software&lt;/li&gt;
  &lt;li&gt;"Ease of deployment – I was able to setup the platform, with minimal effort&lt;/li&gt;
  &lt;li&gt;"Active Directory integration – They use one account for everything on campus, including oVirt&lt;/li&gt;
  &lt;li&gt;"Minimal Internet exposure – We opened three publicly accessible ports on the firewall&lt;/li&gt;
  &lt;li&gt;"SSL Encryption – We were able to secure the portal with a SSL certificate"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Llaneza also works for Coastal IT Solutions, where he helps maintain the oVirt environment there. Coastal has agreed to host the videos and pay for the time needed to create the videos. After LLaneza finished up with the videos in the User Portal, he plans make a few for the Admin Portal, covering topics such as VM Pools, Template Management, and Assigning User Permissions.&lt;/p&gt;

&lt;p&gt;The community will be looking forward to seeing more of Llaneza's work. Check out the videos for yourself.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Subclusters in oVirt 4.0 - Label-Based VM to Host Affinity</title>
    <link rel="alternate" href="http://ovirt.org/blog/2016/07/affinity-labels.html"/>
    <id>http://ovirt.org/blog/2016/07/affinity-labels.html</id>
    <published>2016-07-25T15:00:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Martin Sivak</name>
    </author>
    <content type="html">&lt;p&gt;Before I start discussing the feature itself I have to explain a bit about the use cases that we were trying to solve.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Let us imagine you have a special piece of software with a node-licensing model that only cares about physical machines when counting the number of licenses needed. This specifically allows you to run that software in virtual machines, but you need to control the physical host on which the VMs are running.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The other case is basically related to hardware capabilities. Some NICs might be faster than others and you want to place all high traffic VMs on hosts that have them. Or a special custom device is needed and VMs that need it won’t run on a host that does not have it.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Both cases follow the same basic scenario: There is a small subset of VMs that need a special capability (license, device), but there are not enough of them to fully utilize a separate cluster. To achieve efficient utilization of your cluster, you need to add many common VMs with no special needs and some hosts to handle the full load. But… how do you keep the special VMs from migrating to the hosts without the special capabilities?&lt;/p&gt;

&lt;p&gt;We already had &lt;a href="/documentation/admin-guide/administration-guide/#affinity-groups"&gt;VM to host pinning&lt;/a&gt; that allowed limiting VM placement to &lt;a href="/develop/release-management/features/vmpinningtomultiplehosts/"&gt;single or multiple hosts&lt;/a&gt;, but with no migration enabled for that VM. Our team also just implemented a new feature that allows you to define pinning and still keep migration enabled. Affinity labels allow you to take a subset of hosts and attach a label to them. Any VM with the same affinity label will be then constrained to the labeled hosts. Standard VMs with no labels won’t notice anything and will still happily run anywhere according to the normal oVirt scheduling rules.&lt;/p&gt;

&lt;p&gt;Now the bad news, there is no edit enabled user interface for now and all changes need to be done using the oVirt engine REST API. We have a development version of read only view for host and VM to affinity label assignments for getting a quick overview of the configuration and we plan to have full fledged UI in the future.&lt;/p&gt;

&lt;p&gt;The rest of this post will show you how to implement an example setup with three groups of hosts: webserver, storage and applications:&lt;/p&gt;

&lt;p&gt;&lt;img alt="Example affinity groups layout" width="300" height="370" src="/images/affinity-label-example-diagram.png?1560777613" /&gt;&lt;/p&gt;

&lt;p&gt;I will be using my local server &lt;code&gt;localhost:8080&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;jq&lt;/code&gt;, and a specially crafted shell alias to avoid repeating the login and content type parameters in every example call. Tweak the admin@internal user and letmein password to match the user you will be using. Please note that if you are not using the admin account then you need to make sure the user has the &lt;em&gt;TagManager&lt;/em&gt; permissions.&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;alias cengine='curl -s -u admin@internal:letmein -H "Content-Type: application/json" -H "Accept: application/json"'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="creating-and-updating-a-label"&gt;Creating and Updating a Label&lt;/h2&gt;

&lt;p&gt;Creating a new affinity label is a straightforward operation, just send a POST request to the right endpoint while saving the ID to a variable:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ STORAGELABEL=$(cengine -f -X POST -d '{"name": "test"}' http://localhost:8080/ovirt-engine/api/affinitylabels | jq -r '.id'); echo $STORAGELABEL

cc8bcf08-bc78-40e9-a01a-38a0fe99ea26
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Operations for listing all labels and updating a label’s name are also supported, of course:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cengine -f http://localhost:8080/ovirt-engine/api/affinitylabels | jq -r '.affinity_label[] | {id, name}'

{
  "id": "cc8bcf08-bc78-40e9-a01a-38a0fe99ea26",
  "name": "test"
}

cengine -X PUT -d '{"name": "storage_subcluster"}' http://localhost:8080/ovirt-engine/api/affinitylabels/$STORAGELABEL | jq -r '{id, name}'

{
  "id": "cc8bcf08-bc78-40e9-a01a-38a0fe99ea26",
  "name": "storage_subcluster"
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="attaching-hosts-and-vms-to-a-label"&gt;Attaching Hosts and VMs to a Label&lt;/h2&gt;

&lt;p&gt;Affinity labels reference all labeled objects using their id, although the API accepts the full object representation. It will ignore all fields except id, though. There are two ways to manipulate affinity label assignments to hosts and VMs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Posting the host or VM to the proper affinity label subcollection&lt;/li&gt;
  &lt;li&gt;Posting the affinity label to the host’s or VM’s affinitylabels subcollection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We need some VMs and Hosts for the following examples so create hosts red, green, and blue as well as some VMs: webserver, storage, application1, and application2.&lt;/p&gt;

&lt;p&gt;I will now show you how to express the following rules using the affinity labels:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Webserver VM should be allowed to run anywhere&lt;/li&gt;
  &lt;li&gt;Storage VM should be restricted to host red (special HBA card maybe?)&lt;/li&gt;
  &lt;li&gt;Application VMs should be restricted to hosts red and blue (as you have license for two physical nodes, for example)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will first attach the storage VM and the red host to the already created storage_subcluster affinity label:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cengine -f -X POST -d "{\"id\": \"$REDHOSTID\"}" http://localhost:8080/ovirt-engine/api/affinitylabels/$STORAGELABEL/hosts | jq -r '.status'

complete

$ cengine -f -X POST -d "{\"id\": \"$STORAGEVMID\"}" http://localhost:8080/ovirt-engine/api/affinitylabels/$STORAGELABEL/vms | jq -r '.status'

complete
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can create the application affinity group and attach the necessary hosts and VMs:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ APPLABEL=$(cengine -f -X POST -d '{"name": "app_subcluster"}' http://localhost:8080/ovirt-engine/api/affinitylabels | jq -r '.id'); echo $APPLABEL

d7d91849-262d-4274-bb47-3ad711566fc7

$ for host in $REDHOSTID $BLUEHOSTID; do cengine -f -X POST -d "{\"id\": \"$APPLABEL\"}" http://localhost:8080/ovirt-engine/api/hosts/$host/affinitylabels | jq -r '.status'; done

completed
completed

$ for vm in $APP1VMID $APP2VMID; do cengine -f -X POST -d "{\"id\": \"$APPLABEL\"}" http://localhost:8080/ovirt-engine/api/vms/$vm/affinitylabels | jq -r '.status'; done

completed
completed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="deleting-labels-or-assignments"&gt;Deleting Labels or Assignments&lt;/h2&gt;

&lt;p&gt;That concludes the setup. You can use a standard REST DELETE call in case you need to remove a label to host assignment (just replace hosts with VMs to make it work for label to VM assignments):&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cengine -f -X DELETE http://localhost:8080/ovirt-engine/api/hosts/$hostid/affinitylabels/$labelid | jq -r '.status'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cengine -f -X DELETE http://localhost:8080/ovirt-engine/api/affinitylabels/$labelid/hosts/$hostid | jq -r '.status'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="the-result"&gt;The Result&lt;/h2&gt;

&lt;p&gt;The situation now is as described at the beginning, and will be obeyed during VM startups and VM migrations.&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cengine -f http://localhost:8080/ovirt-engine/api/affinitylabels | jq -r '.affinity_label[] | {id, name, vms, hosts}'

{
  "id": "cc8bcf08-bc78-40e9-a01a-38a0fe99ea26",
  "name": "storage_subcluster",
  "vms": {
    "vm": [
      {“id": "bd6e32cd-1df5-4c5c-a44e-371371e44168"}
    ]
  },
  "hosts": {
    "host": [
      {"id": "4d711089-a3e3-45b7-935a-dc66c4c4ccef"}
    ]
  }
}
{
  "id": "d7d91849-262d-4274-bb47-3ad711566fc7",
  "name": "app_subcluster",
  "vms": {
    "vm": [
      {"id": "a98d58ee-73e4-40be-95f8-bf360e646473"},
      {"id": "7506d8f9-7b40-4ee2-85be-6a7b02024729"}
    ]
  },
  "hosts": {
    "host": [
      {"id": "e2715dfc-5e21-45c1-9e9e-c2d316dc51dd"},
      {"id": "4d711089-a3e3-45b7-935a-dc66c4c4ccef"}
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I hope this new feature will be useful for you, and should you have any questions, do not hesitate to ask on &lt;a href="&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#117;&amp;#115;&amp;#101;&amp;#114;&amp;#115;&amp;#064;&amp;#111;&amp;#118;&amp;#105;&amp;#114;&amp;#116;&amp;#046;&amp;#111;&amp;#114;&amp;#103;"&gt;&amp;#117;&amp;#115;&amp;#101;&amp;#114;&amp;#115;&amp;#064;&amp;#111;&amp;#118;&amp;#105;&amp;#114;&amp;#116;&amp;#046;&amp;#111;&amp;#114;&amp;#103;&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Editable Field Annotations Consolidation</title>
    <link rel="alternate" href="http://ovirt.org/blog/2016/07/annotations-consolidation-blog.html"/>
    <id>http://ovirt.org/blog/2016/07/annotations-consolidation-blog.html</id>
    <published>2016-07-18T16:00:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Phillip Bailey</name>
    </author>
    <content type="html">&lt;p&gt;Robust functionality with minimum verbosity and complexity is a goal for which developers often strive.&lt;/p&gt;

&lt;p&gt;To that end, we have refactored the annotations used to indicate which fields are editable for hosts and virtual machines.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="the-problem"&gt;The Problem&lt;/h2&gt;

&lt;p&gt;Prior to the change, the following annotations were used:&lt;/p&gt;

&lt;p&gt;For VMs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;EditableField&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;EditableHostedEngineField&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;EditableOnVmStatusField&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For VM Templates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;EditableField&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;EditableOnTemplate&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For Hosts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;EditableField&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;EditableOnVdsStatus&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This lead to fields with an overabundance of individual annotations. For example, take the &lt;code&gt;memSizeMb&lt;/code&gt; field in the &lt;code&gt;VmBase&lt;/code&gt; class:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@CopyOnNewVersion
@EditableOnVmStatusField(isHotsetAllowed = true)
@EditableOnTemplate
@EditableHostedEngineField
private int memSizeMb;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Logically, each of the Editable* annotations are communicating the same information: the circumstances under which a given field is editable. However, &lt;code&gt;EditableOnVmStatusField&lt;/code&gt; and &lt;code&gt;EditableOnHostedEngineField&lt;/code&gt; indicate conditions under which a VM entity can be edited, whereas &lt;code&gt;EditableOnTemplate&lt;/code&gt; indicates the entity type for which the field is editable (&lt;code&gt;VmTemplate&lt;/code&gt;). It is easy to see how this can be a bit confusing for someone reading through this code, especially if they are unfamiliar with it.&lt;/p&gt;

&lt;h2 id="the-solution"&gt;The Solution&lt;/h2&gt;

&lt;p&gt;In the first step of the refactor, new annotation names were created that indicate the entity type for which the annotated field is editable:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;EditableVmField&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;EditableVdsField&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;EditableVmTemplateField&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the second step, each of the conditions described by the old annotation names were turned into fields in the applicable annotation. For example, the &lt;code&gt;EditableVmField&lt;/code&gt; annotation was given three fields: &lt;code&gt;onHostedEngine&lt;/code&gt;, &lt;code&gt;hotsetAllowed&lt;/code&gt;, and &lt;code&gt;onStatuses&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The third and final step was to address the way entity statuses were handled, as the previous implementation was problematic. &lt;code&gt;EditableOnVmStatus&lt;/code&gt; and &lt;code&gt;EditableOnVdsStatus&lt;/code&gt; both required each status for which a field is editable to be listed in its &lt;code&gt;onStatus&lt;/code&gt; field. Initially, this makes sense, but consider a field that is editable under any status. The obvious long list of statuses aside, this approach requires that the status list for such a field be updated any time a new status is added to the entity. If the individual adding the status isn't aware of this requirement, a silent regression would be introduced.&lt;/p&gt;

&lt;p&gt;In addition to this potentially serious problem, the implementation of each annotation provided a default list of statuses to be used if no status list was provided in the annotation declaration. In order to be aware of the existence of these default lists, an individual would have to either be familiar with the implementation code or have been informed by a third party.&lt;/p&gt;

&lt;p&gt;In the consolidated version, if no explicit list is provided in the &lt;code&gt;onStatuses&lt;/code&gt; field of the &lt;code&gt;EditableVmField&lt;/code&gt; and &lt;code&gt;EditableVdsField&lt;/code&gt; annotations, it is assumed that the field is editable under all statuses. However, if a list is provided within the annotation declaration, the field will be considered editable only if it is in a status provided in that list. This implementation is clearer, as the &lt;code&gt;onStatuses&lt;/code&gt; field will only be used if the statuses list is being restricted, and the restricted list will be displayed alongside the field to which it applies. It also avoids the entity status update problem.&lt;/p&gt;

&lt;h2 id="the-end-state"&gt;The End State&lt;/h2&gt;

&lt;p&gt;If we employ the new annotations using our previous &lt;code&gt;memSizeMb&lt;/code&gt; example, we get the following:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@CopyOnNewVersion
@EditableVmField(
        onHostedEngine = true,
        hotsetAllowed = true,
        onStatuses = { VMStatus.Down })
@EditableVmTemplateField
private int memSizeMb;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While the line count increased, the conceptual weight of the code has been reduced. The entities for which this field is editable are obvious, and the conditions under which the field is editable for a VM entity are immediately clear.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The line count has only increased due to the styling convention being employed. The same code could be written as:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@CopyOnNewVersion
@EditableVmField(onHostedEngine = true, hotsetAllowed = true, onStatuses = { VMStatus.Down })
@EditableVmTemplateField
private int memSizeMb;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Overall, we feel that this change will provide a cleaner way of representing this information for both the readers and writers of this code.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>oVirt 4.0 is Released!</title>
    <link rel="alternate" href="http://ovirt.org/blog/2016/06/ovirt-40-release.html"/>
    <id>http://ovirt.org/blog/2016/06/ovirt-40-release.html</id>
    <published>2016-06-23T15:00:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Mikey Ariel</name>
    </author>
    <content type="html">&lt;p&gt;On behalf of the oVirt community, I am pleased to announce a major new release today, oVirt 4.0. This latest community release, now ready for &lt;a href="http://www.ovirt.org/download/"&gt;download&lt;/a&gt;, has several new features, including a brand-new dashboard management and monitoring system; enhanced container support; faster live migration speeds; and a new direct-for-disk image uploader.&lt;/p&gt;

&lt;p&gt;As the upstream development project for Red Hat Enterprise Virtualization, oVirt’s integrated virtualization enables cost savings for enterprises without the need to re-develop applications to conform to cloud platforms' APIs. oVirt also shares services with Red Hat’s cloud solutions including RDO, Red Hat's community OpenStack distribution, as well as stronger container support that integrates tools from Project Atomic, Red Hat's robust container management tool set.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;New features highlighted in this release are:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;New Administration Portal:&lt;/strong&gt; Our UX team has created a stunning new dashboard to monitor and control your datacenter, based on feedback from oVirt users. Administrators can visualize the strength of their datacenters and virtual machines at a glance with the highly visual dashboard in place.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Improved Live-Migration Performance:&lt;/strong&gt; Much faster migrations speeds for host-to-host migration with policies that are now completely customizable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Improved Image Features:&lt;/strong&gt; In previous versions of oVirt, VM images needed to be uploaded via command line. With oVirt 4.0, these images can now be selected and uploaded to the oVirt instance right from within the web-based portal. oVirt 4.0 also now enables importing libvirt VMs using the virt-v2v tool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Container Support:&lt;/strong&gt; Support for Atomic guest OS machines is included, with reports available about containers running in them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;New oVirt Node:&lt;/strong&gt; The just-enough operating system version of oVirt has been revamped and includes a Cockpit-based management system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developer Improvements:&lt;/strong&gt; The new API v4 is cleaner and provided improved performance, and a Ruby SDK is now included in oVirt.&lt;/p&gt;

&lt;p&gt;Other exciting new features in this release of oVirt include the capability to deploy additional hosts for Hosted Engine directly from the Web portal, as well as improvements to Gluster hyper-converged setups, per-interface MAC anti-spoofing, and FiberChannel over Ethernet support via VDSM hook.&lt;/p&gt;

&lt;p&gt;A complete list of oVirt 4.0 features is available in the &lt;a href="http://www.ovirt.org/release/4.0.0/"&gt;oVirt 4.0 Release Notes&lt;/a&gt;. oVirt 4.0  is a big step forward in improving the virtual datacenter management experience, improving what is already available in oVirt with more speed and power than ever, while adding improvements to the platform that will take it to the next level of virtual machine management in an increasingly DevOps-oriented IT environment.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.ovirt.org/download/"&gt;Download the latest version of oVirt&lt;/a&gt; today!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Welcome to the new oVirt.org website!</title>
    <link rel="alternate" href="http://ovirt.org/blog/2016/02/welcome-to-new-ovirt-site.html"/>
    <id>http://ovirt.org/blog/2016/02/welcome-to-new-ovirt-site.html</id>
    <published>2016-02-19T15:00:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Mikey Ariel</name>
    </author>
    <content type="html">&lt;p&gt;As part of our efforts to upgrade the ovirt.org website and improve the community experience, we migrated the oVirt website from a MediaWiki site to a static site, authored in &lt;a href="https://help.github.com/articles/basic-writing-and-formatting-syntax/"&gt;Markdown&lt;/a&gt; and published with &lt;a href="https://middlemanapp.com/"&gt;Middleman&lt;/a&gt;. This was a major project that took more than 6 months and involved many contributors from all aspects of the project.&lt;/p&gt;

&lt;p&gt;I'd like to take this opportunity to thank all the people who were involved with this migration, from content reviewers to UX designers and Website admins who gave their time and brain power to make this happen.&lt;/p&gt;

&lt;p&gt;The old MediaWiki site is &lt;a href="http://old.ovirt.org/Home"&gt;still available in read-only&lt;/a&gt;, and will be taken offline once we fix some pending issues, including handling PDF files and such.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="whats-new"&gt;What's new?&lt;/h2&gt;

&lt;p&gt;The new Website is full of improvements and enhancements, check out these highlights:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Source content is now formatted in Markdown instead of MediaWiki. This means that you can create and edit documentation, blog posts, and feature pages with the same Markdown syntax you know.&lt;/li&gt;
  &lt;li&gt;The Website is deployed with Middleman and stored on GitHub. This means that you can make changes to content with the same GitHub contribution workflow that you know (fork, clone, edit, commit, submit pull request). We even have an "Edit this page on GitHub" link at the bottom of every page!&lt;/li&gt;
  &lt;li&gt;New layout and design, from breadcrumbs to sidebards and an upgraded landing page.&lt;/li&gt;
  &lt;li&gt;Automatic redirects from the old MediaWiki site. This means that if the wiki page exists in the new website, previously-released URLs will redirect to that page. If the page was removed, the Search page will open with the page title auto-filled in the search box.&lt;/li&gt;
  &lt;li&gt;Hierarchical content structure. This means that instead of flat Wiki-style files, the deployed Website reflects an organized source repo with content sorted into directories and sub-directories.&lt;/li&gt;
  &lt;li&gt;Official oVirt blog! This first post marks the beginning of our new blog, and we welcome contributions. This means that if you solved a problem with oVirt, want to share your oVirt story, or describe a cool integration, you can submit a blog post and we will provide editorial reviews and help publish your posts.&lt;/li&gt;
  &lt;li&gt;Standardized contribution process. The GitHub repo now includes a &lt;a href="https://github.com/oVirt/ovirt-site/blob/master/README.md"&gt;README.md&lt;/a&gt; file that you can use to learn about how to add and edit content on the website. We welcome pull requests!&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="known-issues"&gt;Known Issues&lt;/h1&gt;

&lt;p&gt;Despite our best efforts, there are still a few kinks with the new website that you should be aware of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Attempting to navigate to ovirt.org (without www.) leads to a redirect loop. We have a ticket open with OpenShift, our hosting service to fix this.&lt;/li&gt;
  &lt;li&gt;Only http is available. We also have a ticket with OpenShift to add SSL and enable https.&lt;/li&gt;
  &lt;li&gt;Home page and Download page are still being upgraded by our UX team, expect some cool new changes soon!&lt;/li&gt;
  &lt;li&gt;Feature pages look-and-feel is still under construction. You can still edit and push feature pages as usual.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="whats-next"&gt;What's Next&lt;/h1&gt;

&lt;p&gt;Even though the Website is live, the work is hardly over. We'd like to ask for your help in:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Reviewing content for anything obsolete or outdated; each page in the new website includes a header toolbar with metadata from the original wiki page for your convenience&lt;/li&gt;
  &lt;li&gt;Submitting blog posts or any other content that you wish to share with the oVirt community&lt;/li&gt;
  &lt;li&gt;Reporting bugs and proposing enhancements, for example broken links or missing pages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We hope you will enjoy the new oVirt Website, looking forward to your feedback and contributions!&lt;/p&gt;
</content>
  </entry>
</feed>
