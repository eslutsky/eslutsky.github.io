<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>oVirt</title>
  <subtitle>Tag: Community</subtitle>
  <id>http://ovirt.org/blog/</id>
  <link href="http://ovirt.org/blog/"/>
  <link href="http://ovirt.org/blog/tag/community.xml" rel="self"/>
  <updated>2019-05-27T15:35:00+00:00</updated>
  <author>
    <name/>
  </author>
  <entry>
    <title>Integrating Kibana/Elasticsearch on Top of OpenShift with oVirt Engine SSO</title>
    <link rel="alternate" href="http://ovirt.org/blog/2017/05/openshift-openId-integration-with-engine-sso.html"/>
    <id>http://ovirt.org/blog/2017/05/openshift-openId-integration-with-engine-sso.html</id>
    <published>2017-05-16T12:35:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Ravi Nori</name>
    </author>
    <content type="html">&lt;p&gt;oVirt Engine provides a powerful way to manage users and domains using the oVirt Engine AAA extensions. oVirt Engine supports many different LDAP server types for authentication using the &lt;code&gt;ovirt-engine-extension-aaa-ldap&lt;/code&gt; extension and supports managing internal users using the &lt;code&gt;ovirt-engine-extension-aaa-jdbc&lt;/code&gt; extension. Clients can use the powerful oVirt Engine user management in their applications by using the OAuth2 or OpenId Connect end points provided by oVirt Engine SSO to authenticate users in their applications.&lt;/p&gt;

&lt;p&gt;Below is step-by-step instructions on how to integrate Kibana/Elasticsearch on top of OpenShift with oVirt Engine SSO. The instructions should work for any client application that can be configured to use a OAuth2 or OpenID Connect server to authenticate its users.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;The goal is to integrate Kibana/Elasticsearch on top of OpenShift with oVirt Engine SSO, so existing engine users can access Kibana/Elasticsearch without reauthentication (we don't need to maintain authentication configuration separately for oVirt Engine and Kibana/Elasticsearch).&lt;/p&gt;

&lt;p&gt;The integration requires a fully working and configured oVirt Engine instance on oVirt Engine host and a fully working and configured instance of Kibana/Elasticsearch on top of OpenShift on the OpenShift host.&lt;/p&gt;

&lt;h2 id="installing-kibanaelasticsearch-and-openshift-backend"&gt;Installing Kibana/Elasticsearch and OpenShift Backend&lt;/h2&gt;

&lt;p&gt;Install Kibana/Elasticsearch/OpenShift on CentOS7 or RHEL 7.3 as described in https://www.ovirt.org/develop/release-management/features/metrics/setting-up-viaq-logging/&lt;/p&gt;

&lt;h2 id="installing-ovirt-engine"&gt;Installing oVirt Engine&lt;/h2&gt;

&lt;p&gt;Setup oVirt Engine on a separate host ovirt-engine.example.com as described in https://www.ovirt.org/download/&lt;/p&gt;

&lt;h2 id="setting-up-ovirt-engine-certificate-on-openshift-machine"&gt;Setting up oVirt Engine certificate on OpenShift machine&lt;/h2&gt;

&lt;p&gt;Get the oVirt Engine CA as described here https://www.ovirt.org/documentation/how-to/guest-console/connect-to-spice-console-without-portal/&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;scp root@&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OVIRT&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;:/etc/pki/ovirt-engine/ca.pem &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CA_FILE&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add the certificate to system-wide trusted certificates. Copy the certificate to /etc/pki/ca-trust/source/anchors/ and run update-ca-trust&lt;/p&gt;

&lt;h2 id="register-a-new-sso-client-on-ovirt-engine-host"&gt;Register a New sso Client on ovirt-engine Host&lt;/h2&gt;

&lt;p&gt;Run the client registration tool ovirt-register-sso-client to register a new sso client. The tool will prompt the user to enter the client id, location of the client certificate (downloaded to oVirt Engine host) and the callback url prefix. Make note of the client id and client secret generated by the tool. The client id and client secret need to be entered in the master configuration file on the OpenShift host to configure authentication with oVirt Engine. The client registration tool is only available in oVirt Engine 4.2 and later.&lt;/p&gt;

&lt;h2 id="setup-oauthconfig-on-kibanaelasticsearchopenshift-host"&gt;Setup oauthconfig on Kibana/Elasticsearch/OpenShift Host&lt;/h2&gt;

&lt;p&gt;On Kibana/Elasticsearch/OpenShift host edit /etc/origin/master/master-config.yaml to setup oauthconfig as below. For oVirt Engine 4.1, see note below.&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;oauthConfig&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;assetPublicURL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://openshift.example.com:8443/console/&lt;/span&gt;
  &lt;span class="na"&gt;grantConfig&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;auto&lt;/span&gt;
  &lt;span class="na"&gt;identityProviders&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;challenge&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;login&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;mappingMethod&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;claim&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;my_openid_connect&lt;/span&gt;
    &lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
      &lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;OpenIDIdentityProvider&lt;/span&gt;
      &lt;span class="na"&gt;clientID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;client id specified in previous step&amp;gt;&lt;/span&gt;
      &lt;span class="na"&gt;clientSecret&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;client id generated in previous step&amp;gt;&lt;/span&gt;
      &lt;span class="na"&gt;extraScopes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;ovirt-app-api&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;ovirt-ext=auth:sequence-priority=~&lt;/span&gt;
      &lt;span class="na"&gt;extraAuthorizeParameters&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;include_granted_scopes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;true"&lt;/span&gt;
&lt;span class="na"&gt;claims&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;custom_id_claim&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;sub&lt;/span&gt;
        &lt;span class="na"&gt;preferredUsername&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;preferred_username&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;email&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;nickname&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;given_name&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;name&lt;/span&gt;
        &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;custom_email_claim&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;email&lt;/span&gt;
      &lt;span class="na"&gt;urls&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;authorize&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://ovirt-engine.example.com/ovirt-engine/sso/openid/authorize&lt;/span&gt;
        &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://ovirt-engine.example.com/ovirt-engine/sso/openid/token&lt;/span&gt;
  &lt;span class="na"&gt;masterCA&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ca-bundle.crt&lt;/span&gt;
  &lt;span class="na"&gt;masterPublicURL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://openshift.example.com:8443&lt;/span&gt;
  &lt;span class="na"&gt;masterURL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://openshift.example.com:8443&lt;/span&gt;
  &lt;span class="na"&gt;sessionConfig&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;sessionMaxAgeSeconds&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;3600&lt;/span&gt;
    &lt;span class="na"&gt;sessionName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ssn&lt;/span&gt;
    &lt;span class="na"&gt;sessionSecretsFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/etc/origin/master/session-secrets.yaml&lt;/span&gt;
  &lt;span class="na"&gt;tokenConfig&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;accessTokenMaxAgeSeconds&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;86400&lt;/span&gt;
    &lt;span class="na"&gt;authorizeTokenMaxAgeSeconds&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;500&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In oVirt engine 4.1 the authorize and token endpoints point to oauth endpoints.&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;      urls:
        authorize: https://ovirt-engine.example.com/ovirt-engine/sso/oauth/authorize
        token: https://ovirt-engine.example.com/ovirt-engine/sso/oauth/token
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="restart-ovirt-engine"&gt;Restart oVirt Engine&lt;/h2&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl restart ovirt-engine
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="restart-origin-master-and-origin-node-on-openshift-host"&gt;Restart origin-master and origin-node on OpenShift Host&lt;/h2&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl restart origin-master
systemctl restart origin-node
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="configure-hostnames"&gt;Configure hostnames&lt;/h2&gt;

&lt;p&gt;Make sure the hosts are reachable by their hostnames if required add host aliases in /etc/hosts&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight conf"&gt;&lt;code&gt;&lt;span class="m"&gt;10&lt;/span&gt;.&lt;span class="m"&gt;16&lt;/span&gt;.&lt;span class="m"&gt;19&lt;/span&gt;.&lt;span class="m"&gt;48&lt;/span&gt; &lt;span class="n"&gt;openshift&lt;/span&gt;.&lt;span class="n"&gt;example&lt;/span&gt;.&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;kibana&lt;/span&gt;.&lt;span class="n"&gt;example&lt;/span&gt;.&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;mux&lt;/span&gt;.&lt;span class="n"&gt;example&lt;/span&gt;.&lt;span class="n"&gt;com&lt;/span&gt;

&lt;span class="m"&gt;10&lt;/span&gt;.&lt;span class="m"&gt;10&lt;/span&gt;.&lt;span class="m"&gt;116&lt;/span&gt;.&lt;span class="m"&gt;110&lt;/span&gt; &lt;span class="n"&gt;ovirtengine&lt;/span&gt;.&lt;span class="n"&gt;example&lt;/span&gt;.&lt;span class="n"&gt;com&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="grant-permissions"&gt;Grant Permissions&lt;/h2&gt;

&lt;p&gt;The user needs to be granted permissions manually in OpenShift, using the console UI or the command line, so that the user can view the data in Kibana. Accessing https://kibana.example.com should redirect to the engine login page. Enter credentials and login will redirect user back to Kibana.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Using oVirt and Vagrant</title>
    <link rel="alternate" href="http://ovirt.org/blog/2017/02/using-oVirt-vagrant.html"/>
    <id>http://ovirt.org/blog/2017/02/using-oVirt-vagrant.html</id>
    <published>2017-02-10T21:00:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Marc Young</name>
    </author>
    <content type="html">&lt;p&gt;Introducing oVirt virtual machine management via Vagrant.&lt;/p&gt;

&lt;p&gt;In this short tutorial I'm going to give a brief introduction on how to use &lt;a href="http://vagrantup.com"&gt;vagrant&lt;/a&gt; to manage oVirt with the new &lt;a href="http://www.github.com/myoung34/vagrant-ovirt4"&gt;community developed oVirt v4 Vagrant provider&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="background"&gt;Background&lt;/h2&gt;

&lt;p&gt;Vagrant is a way to tool to create portable and reproducible environments. We can use it to provision and manage virtual machines in oVirt by managing a base box (small enough to fit in github as an artifact) and a Vagrantfile. The Vagrantfile is the piece of configuration that defines everything about the virtual machines: memory, cpu, base image, and any other configuration that is specific to the hosting environment.&lt;/p&gt;

&lt;h2 id="prerequisites"&gt;Prerequisites&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;A fully working and configured oVirt cluster of any size&lt;/li&gt;
  &lt;li&gt;A system capable of compiling and running the &lt;a href="http://github.com/ovirt/ovirt-engine-sdk-ruby"&gt;oVirt ruby SDK gem&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Vagrant 1.8 or later&lt;/li&gt;
  &lt;li&gt;The oVirt vagrant plugin installed via &lt;code&gt;$ vagrant plugin install vagrant-ovirt4&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="the-vagrantfile"&gt;The Vagrantfile&lt;/h2&gt;

&lt;p&gt;To start off, I'm going to use this Vagrantfile:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Vagrant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"2"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'ovirt4'&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hostname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"test-vm"&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;box_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'https://github.com/myoung34/vagrant-ovirt4/blob/master/example_box/dummy.box?raw=true'&lt;/span&gt;

  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;network&lt;/span&gt; &lt;span class="ss"&gt;:private_network&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;:ip&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'192.168.56.100'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:nictype&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'virtio'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:netmask&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'255.255.255.0'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;#normal network configuration&lt;/span&gt;
    &lt;span class="ss"&gt;:ovirt__ip&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'192.168.2.198'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:ovirt__network_name&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'ovirtmgmt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:ovirt__gateway&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'192.168.2.125'&lt;/span&gt; &lt;span class="c1"&gt;# oVirt specific information, overwrites previous on oVirt provider&lt;/span&gt;

  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;provider&lt;/span&gt; &lt;span class="ss"&gt;:ovirt4&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'https://ovirt/ovirt-engine/api'&lt;/span&gt;
    &lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"admin@internal"&lt;/span&gt;
    &lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"mypassword"&lt;/span&gt;
    &lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;insecure&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;cluster&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Default'&lt;/span&gt;
    &lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'vagrant-centos7'&lt;/span&gt;
    &lt;span class="n"&gt;ovirt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;console&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'vnc'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the configuration file, there are some pieces on which to elaborate. The URL, password, and username should be self-explanatory. The &lt;code&gt;config.vm.network&lt;/code&gt; block has some special mappings (prefixed by &lt;code&gt;ovirt__&lt;/code&gt;) so that it can be used in any provider, as well as oVirt. Vagrantfiles can manage lifecycles across providers, which is why the oVirt-specific mappings are in a &lt;code&gt;config.vm.provider :ovirt4&lt;/code&gt; configuration block as well.&lt;/p&gt;

&lt;p&gt;Within our &lt;code&gt;ovirt4&lt;/code&gt; configuration section, we have set SSL verify to off (to allow self-signed certificates), the cluster is set to &lt;code&gt;Default&lt;/code&gt; (and available in the oVirt UI), and the template to use as a starting point is &lt;code&gt;vagrant-centos7&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The base template will need to be created per your environment, but a starting helper script for redhat based distributions such as CentOS &lt;a href="https://github.com/myoung34/vagrant-ovirt4/blob/master/tools/prepare_redhat_for_box.sh"&gt;is available here&lt;/a&gt;. It basically installs some base packages like the oVirt agent but also sets up a local user &lt;code&gt;vagrant&lt;/code&gt; inside the VM that is required to proceed. Please read through it carefully.&lt;/p&gt;

&lt;h2 id="getting-to-it"&gt;Getting to it&lt;/h2&gt;

&lt;p&gt;In the directory where the &lt;code&gt;Vagrantfile&lt;/code&gt; lives, we can create and start a VM.&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant up
Bringing machine &lt;span class="s1"&gt;'default'&lt;/span&gt; up with &lt;span class="s1"&gt;'ovirt4'&lt;/span&gt; provider...
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Creating VM with the following settings...
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default:  &lt;span class="nt"&gt;--&lt;/span&gt; Name:          test-vm
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default:  &lt;span class="nt"&gt;--&lt;/span&gt; Cluster:       Default
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default:  &lt;span class="nt"&gt;--&lt;/span&gt; Template:      vagrant-centos7
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default:  &lt;span class="nt"&gt;--&lt;/span&gt; Console Type:  vnc
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Waiting &lt;span class="k"&gt;for &lt;/span&gt;VM to become &lt;span class="s2"&gt;"ready"&lt;/span&gt; to start...
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Starting VM.
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Waiting &lt;span class="k"&gt;for &lt;/span&gt;VM to get an IP address...
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Machine is booted and ready &lt;span class="k"&gt;for &lt;/span&gt;use!
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Rsyncing folder: /home/vagrant/ &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; /vagrant
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Setting hostname...
    default:
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair &lt;span class="k"&gt;for &lt;/span&gt;better security.
    default:
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest &lt;span class="k"&gt;if &lt;/span&gt;it&lt;span class="s1"&gt;'s present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you look in oVirt we now have a virtual machine named &lt;code&gt;test-vm&lt;/code&gt; running.&lt;/p&gt;

&lt;p&gt;&lt;img alt="vagrant vm listed" width="2042" height="792" src="/images/vagrant-ovirt-up-1.png?1560777613" /&gt;&lt;/p&gt;

&lt;p&gt;We can do things such as manage snapshots:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant snapshot list
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Retrieving list of snapshots...
id     description     date

&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant snapshot save somename
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Creating snapshot...

&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant snapshot list
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Retrieving list of snapshots...
                                  id     description                          date
3dd34cbf-4698-446f-82bb-00ac66931411        somename     2017-02-10T05:34:53-06:00

&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant snapshot delete 3dd34cbf-4698-446f-82bb-00ac66931411
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Deleting snapshot...

&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant snapshot list
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Retrieving list of snapshots...
id     description     date
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can SSH into the box or run commands via SSH:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant ssh
Last login: Wed Feb  8 21:27:23 2017 from marc-pc

&lt;span class="nv"&gt;$ &lt;/span&gt;hostname
test-vm
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;logout
&lt;/span&gt;Connection to 192.168.2.238 closed.

&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant ssh &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s1"&gt;'hostname; whoami'&lt;/span&gt;
test-vm
vagrant
Connection to 192.168.2.238 closed.

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can also run &lt;a href="https://www.vagrantup.com/docs/provisioning/"&gt;provisioners&lt;/a&gt; against the machine. Add this to your Vagrantfile:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;provision&lt;/span&gt; &lt;span class="s2"&gt;"shell"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;inline: &lt;/span&gt;&lt;span class="s2"&gt;"whoami &amp;gt;&amp;gt; /home/vagrant/somefile"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let's see what happens when we use it:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant provision
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Rsyncing folder: /home/vagrant/ &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; /vagrant
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Running provisioner: shell...
    default: Running: inline script

&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant ssh &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s1"&gt;'cat ~/somefile'&lt;/span&gt;
root
Connection to 192.168.2.238 closed.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lastly, we can tear down the VM and all of its artifacts:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vagrant destroy &lt;span class="nt"&gt;-f&lt;/span&gt;
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Halting VM...
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Waiting &lt;span class="k"&gt;for &lt;/span&gt;VM to shutdown...
&lt;span class="o"&gt;==&amp;gt;&lt;/span&gt; default: Removing VM...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>oVirt Community Newsletter December 2016</title>
    <link rel="alternate" href="http://ovirt.org/blog/2017/01/oVirt-December-2016-newsletter.html"/>
    <id>http://ovirt.org/blog/2017/01/oVirt-December-2016-newsletter.html</id>
    <published>2017-01-19T21:00:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Brian Proffitt</name>
    </author>
    <content type="html">&lt;p&gt;It's a new year with new opportunities for oVirt to show up its virtualization features! We're getting ready for DevConf.CZ in Brno next week, and FOSDEM in Brussels the week after that! We look forward to meeting European developers and sysadmins to share your experiences!&lt;/p&gt;

&lt;p&gt;Here's what happened in December of 2016.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="software-releases"&gt;Software Releases&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOI9cY"&gt;oVirt 4.0.6 Release is now available&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="in-the-community"&gt;In the Community&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOLCrW"&gt;Happy New Documentation!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iONDUR"&gt;oVirt System Tests to the Rescue!—How to Run End-to-End oVirt Tests on Your Patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOTAkD"&gt;CI Please Build—How to build your oVirt project on-demand&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOPUzf"&gt;The Need for Speed—Coming Changes in oVirt's CI Standards&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOPARp"&gt;Еxtension of iptables Rules on oVirt 4.0 Hosts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOKeW6"&gt;New oVirt Project Underway&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="deep-dives-and-technical-discussions"&gt;Deep Dives and Technical Discussions&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOILiD"&gt;KVM/Linux Nested Virtualization Support For ARM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOWDtj"&gt;Virtual Machines in Kubernetes? How and what makes sense?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iORd1j"&gt;ANNOUNCE: New libvirt project Go XML parser model&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOOEwc"&gt;Using OVN with KVM and Libvirt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iP0ne5"&gt;New libvirt project Go language bindings&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOVilZ"&gt;CI tools testing lab: Making it do useful work&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOOBRa"&gt;CI tools testing lab: Integrating Jenkins and adding Zuul UI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOP1a8"&gt;CI tools testing lab: Adding Zuul Merger&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOUZYn"&gt;CI tools testing lab: Setting up Zuul Server&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iP0CG1"&gt;CI tools testing lab: Adding Gerrit&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2iOSvtc"&gt;CI tools testing lab: Initial setup with Jenkins&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="downstream-news"&gt;Downstream News&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://red.ht/2jvB5mf"&gt;Debugging a kernel in QEMU/libvirt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://red.ht/2iLW5YU"&gt;Five Reasons to Switch from vSphere to Red Hat Virtualization&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://red.ht/2hW9N7B"&gt;Red Hat scoops Best Virtualization Product at the V3 Technology Awards 2016&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Happy New Documentation!</title>
    <link rel="alternate" href="http://ovirt.org/blog/2017/01/happy-new-documentation.html"/>
    <id>http://ovirt.org/blog/2017/01/happy-new-documentation.html</id>
    <published>2017-01-16T14:55:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Brian Proffitt</name>
    </author>
    <content type="html">&lt;p&gt;The oVirt Project is pleased to announce the availability of &lt;a href="/documentation/"&gt;all-new principal documentation&lt;/a&gt; for the oVirt 4.0 branch.&lt;/p&gt;

&lt;p&gt;There are many people out there who are content to use software without documentation, preferring to muddle through the software based on past experience with similar software or just the desire to put the software through its paces.&lt;/p&gt;

&lt;p&gt;We all do this; I could not tell you the last time I looked at documentation for Firefox or Chrome, because I've been using browsers for over 20 years and seriously, what else is there to learn? Until I learn about a cool new feature from a friend or a web site.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;In a software community project, one of the biggest things a community must do is to provide proper onboarding to the project's result. This means:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Explaining what the software is&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Providing a clear path to getting the software&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Demonstrating how to use the software&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All three of these onboarding requirements must be done right in order for onboarding to work successfully. Documenation, then, fulfills the third requirement: showing how software can be used. Not every one will need it, but for those users who do need it, it is very nice to have.&lt;/p&gt;

&lt;p&gt;To that end, the oVirt Project has, with the help of the Red Hat Content Services team, created a new and complete set of &lt;a href="/documentation/"&gt;documentation&lt;/a&gt; based on the downstream documentation for Red Hat Virtualization 4.0.&lt;/p&gt;

&lt;p&gt;You may be thinking that this is a backwards process. Shouldn't the upstream documentation be the basis of the downstream? And you would be right… normally that is how the flow of documentation, like code, goes. But the upstream documentation for oVirt has been incomplete and sadly out of sync for quite some time, so it was though that "bootstrapping" the downstream docs as a reset would be a good place to start.&lt;/p&gt;

&lt;p&gt;Even these guides themselves are incomplete. Downstream references have been removed, but some still remain. And, since the feature set for oVirt is always a bit larger than its downstream products, there are sure to be features that have yet to be described. This is where, we hope, you come in.&lt;/p&gt;

&lt;p&gt;Now that there is a strong base of documentation with which to work, we hope you will visit the oVirt site's &lt;a href="https://github.com/oVirt/ovirt-site"&gt;GitHub repo&lt;/a&gt; and submit changes and additions as needed. In this way, the documention will be a living, breathing document that will not only provide oVirt users and admins a great reference, but also be the starting point for the multiple downstream products that use oVirt as their base.&lt;/p&gt;

&lt;p&gt;The principal documentation includes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/quickstart/quickstart-guide/"&gt;Quick Start Guide&lt;/a&gt;.&lt;/strong&gt; This document is a step-by-step guide for first-time users to install and configure a basic oVirt environment and create virtual machines.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/install-guide/Installation_Guide"&gt;oVirt Installation Guide&lt;/a&gt;.&lt;/strong&gt; The installation and configuration of an oVirt Engine, the installation and configuration of hosts and attaching existing FCP storage to your oVirt environment.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/upgrade-guide/upgrade-guide"&gt;oVirt Upgrade Guide&lt;/a&gt;.&lt;/strong&gt; This guide covers updating your oVirt environment between minor releases, and upgrading to the next major version.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/admin-guide/administration-guide/"&gt;oVirt Administration Guide&lt;/a&gt;.&lt;/strong&gt; A master guide to administering an oVirt environment.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/vmm-guide/Virtual_Machine_Management_Guide"&gt;oVirt Virtual Machine Management Guide&lt;/a&gt;.&lt;/strong&gt; Most virtual machine tasks in oVirt can be performed in both the User Portal and Administration Portal. However, the user interface differs between each portal, and some administrative tasks require access to the Administration Portal. Tasks that can only be performed in the Administration Portal will be described as such in this guide.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/intro-admin/Introduction_to_the_Administration_Portal"&gt;oVirt Introduction to the Administration Portal&lt;/a&gt;.&lt;/strong&gt; A straightforward howto for the Administration portal.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/intro-user/Introduction_to_the_User_Portal"&gt;oVirt Introduction to the User Portal&lt;/a&gt;.&lt;/strong&gt; A straightforward howto for the User portal.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/self-hosted/Self-Hosted_Engine_Guide"&gt;oVirt Self-Hosted Engine Guide&lt;/a&gt;.&lt;/strong&gt; A self-hosted engine is a virtualized environment in which the oVirt Engine runs on a virtual machine on the hosts managed by that engine. The virtual machine is created as part of the host configuration, and the Engine is installed and configured in parallel to the host configuration process. This guide will walk you through how to setup and run this feature.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href="/documentation/data-warehouse/Data_Warehouse_Guide"&gt;oVirt Data Warehouse Guide&lt;/a&gt;.&lt;/strong&gt; The oVirt Engine includes a comprehensive management history database, which can be utilized by any application to extract a range of information at the data center, cluster, and host levels. Installing Data Warehouse creates the ovirt_engine_history database, to which the Engine is configured to log information for reporting purposes. The Data Warehouse component is optional, but if you want to use it, this guide will help.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The oVirt Project would specifically like to thank Derek Cadzow of Content Services and Shaun McCance of the Open Source and Standards teams for their invaluable assistance on this bootstrapping project! We hope you find this documentation useful and welcome any and all feedback as part of the ongoing efforts to make our onboarding process strong.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>oVirt Newsletter&amp;mdash;November 2016</title>
    <link rel="alternate" href="http://ovirt.org/blog/2016/12/ovirt-november-newsletter.html"/>
    <id>http://ovirt.org/blog/2016/12/ovirt-november-newsletter.html</id>
    <published>2016-12-02T18:20:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Brian Proffitt</name>
    </author>
    <content type="html">&lt;p&gt;oVirt's development is continuing on pace, as the calendar year draws to a close and we get ready for a new year of development, evangelism, and making virtual machine management a simple process for everyone.&lt;/p&gt;

&lt;p&gt;Here's what happened in November of 2016.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="software-releases"&gt;Software Releases&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2gOxaDm"&gt;oVirt 4.0.6 Third Release Candidate is now available&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2gOtRfa"&gt;oVirt 4.1.0 First Beta Release is now	available for testing&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="in-the-community"&gt;In the Community&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://www.ovirt.org/blog/2016/11/testing-ovirt-changes-without-cluster/"&gt;Testing ovirt-engine changes without a real cluster&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2gOByCg"&gt;Request for oVirt Ansible modules testing feedback&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="deep-dives-and-technical-discussions"&gt;Deep Dives and Technical Discussions&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2gP3Bl0"&gt;Important Open Source Cloud Products [German]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://red.ht/2ekHcLV"&gt;Red Hat IT runs OpenShift Container Platform on Red Hat Virtualization and Ansible&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2gOzutT"&gt;Keynote: Blurring the Lines: The Continuum Between Containers and VMs [Video]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://red.ht/2emiQkN"&gt;Quick Guide: How to Plan Your Red Hat Virtualization 4.0 Deployment&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2gOAuyp"&gt;A Decade of KVM [Chinese]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/2gOBaUf"&gt;Expansion of iptables Rules for oVirt 4.0 [Russian]&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>oVirt Software Defined Networking, The OVN Network Provider</title>
    <link rel="alternate" href="http://ovirt.org/blog/2016/11/ovirt-provider-ovn.html"/>
    <id>http://ovirt.org/blog/2016/11/ovirt-provider-ovn.html</id>
    <published>2016-11-02T17:00:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Marcin Mirecki</name>
    </author>
    <content type="html">&lt;p&gt;oVirt offers not only its own internal networking, but also an API for external network providers. This API enables using external network management software inside environments managed by oVirt and takes advantage of their extended capabilities.
One of such solutions is OVN: Open Virtual Network. OVN is an OVS (Open vSwitch) extension that brings Software Defined Networking to &lt;a href="http://openvswitch.github.io/support/dist-docs/README.rst.html"&gt;OVS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;OVN enables support for virtual networks abstraction by adding native OVS support for virtual L2 and L3 overlays.
This allows the user to create as many VM networks as required, without troubling the adminstrator with vlan requests or infrastructure changes.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;The oVirt provider for OVN consists of two parts:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The oVirt OVN driver&lt;/li&gt;
  &lt;li&gt;The oVirt OVN provider&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="ovirt-ovn-driver"&gt;oVirt OVN Driver&lt;/h2&gt;

&lt;p&gt;The oVirt OVN driver is the Virtual Interface Driver placed on oVirt hosts that handle the wiring of VM NICs to OVN networking.&lt;/p&gt;

&lt;p&gt;The driver allows Vdsm, libvirt, and OVN to interact whenever a NIC is plugged in such a way that the VM NIC is added to an appropriate OVN Logical Switch and the appropriate OVN overlays on all the hosts in the oVirt environment.&lt;/p&gt;

&lt;p&gt;The &lt;a href="http://resources.ovirt.org/repos/mmirecki/ovirt-provider-ovn-driver-1.0-1.fc24.noarch.rpm"&gt;oVirt OVN driver rpm&lt;/a&gt; is now available for testing. The latest version can always be downloaded and built from the repository (described later in this article). Once the rpm is downloaded, it can be installed in the following way:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yum install ovirt-provider-ovn-driver-1.0-1.fc24.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OVN requires Vdsm and OVN (version 2.6 or later) to be installed on the host. The following OVN packages are required by the ovirt-provider-ovn-driver rpm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;openvswitch&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;openvswitch-ovn-common&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;openvswitch-ovn-host&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;python-openvswitch&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are available from the &lt;a href="http://openvswitch.org/download/"&gt;OVS website&lt;/a&gt; or built using the code downloaded from the OVS repo (described below).&lt;/p&gt;

&lt;p&gt;The OVN-controller service can be started using the following command:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl start ovn-controller
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In order to make the service start automatically at boot, the service could be enabled using:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl enable ovn-controller
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After installing the driver and OVN, the OVN-controller must be configured. This can be done either using the vdsm-tool:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;vdsm-tool ovn-config &amp;lt;OVN central server IP&amp;gt; &amp;lt;local IP used for OVN tunneling&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second parameter (local IP used for OVN tunneling) can be the IP address of the ovirtmgmt interface on the host, and should be reachable by OVN hosts and central server.
vdsm-tool will also configure ovn-controller with the PKI required to safely connect to the ovn central server.
To add support for Transport Layer Security (TLS) connectivity with the OVN-controller, vdsm-tool will use the VDSM private and public keys, and configures OVN-controller to enable PKI encryption between the host and the OVN south db on the OVN central server. This provides privacy and data-integrity in the management connections to the south database&lt;/p&gt;

&lt;p&gt;The OVN-controller can also be set up by using the OVN command-line interface directly. For more information about OVN-controller setup, please check the
&lt;a href="http://openvswitch.org/support/dist-docs/"&gt;OVS documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The command above should create OVN tunnels to other OVN controllers (if at least one other ovn-controller is present).
Please verify that the tunnel has been created by issuing the following commands:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ip link&lt;/code&gt; - the result should include a link called &lt;code&gt;genev_sys_ ...&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ovs-vsctl show&lt;/code&gt; - the bridge &lt;code&gt;br-int&lt;/code&gt; should include a port looking somewhat like this:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Port "ovn-6b2d2f-0"
   Interface "ovn-6b2d2f-0"
        type: geneve
        options: {csum="true", key=flow, remote_ip="10.35.128.14"}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please check the OVN logs in case of problems. The relevant OVN logs are located in &lt;code&gt;/var/log/openvswitch/&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id="ovirt-ovn-provider"&gt;oVirt OVN Provider&lt;/h2&gt;

&lt;p&gt;The oVirt OVN provider is a proxy that the oVirt Engine uses to interact with OVN. It is delivered as an rpm that is to be installed on the host where OVN central is installed.&lt;/p&gt;

&lt;p&gt;The &lt;a href="http://resources.ovirt.org/repos/mmirecki/ovirt-provider-ovn-1.0-1.fc24.noarch.rpm"&gt;oVirt OVN provider RPM&lt;/a&gt; is also available now. The latest version can always be downloaded and built from the repository as well. Once the rpm is downloaded, it can be installed with this command:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yum install ovirt-provider-ovn-1.0-1.fc24.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OVN requires OVN to be installed on the host (version 2.6 or later).
The OVN provider requires the following OVS and OVN packages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;openvswitch&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;openvswitch-ovn-common&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;openvswitch-ovn-central&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;python-openvswitch&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are also available from the &lt;a href="http://openvswitch.org/download/"&gt;OVS website&lt;/a&gt; or built using the code downloaded from the OVS repo (described below).&lt;/p&gt;

&lt;p&gt;After installing the oVirt OVN provider, the admin needs to open up port 9696 in the firewall.
This can be done manually or by adding the ovirt-provider-ovn firewalld service to the appropriate firewalld zone with:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;firewall-cmd --zone=&amp;lt;zone to add service to&amp;gt; --add-service=ovirt-provider-ovn --permanent
firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The zone currently selected as default can be obtained by executing:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;firewall-cmd --get-default-zone
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Firewalld also needs to be configured for OVN components. This will be handled by OVN in the near future (https://bugzilla.redhat.com/1390938).
In the mean time the following commands open the required ports on the OVN central server:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;firewall-cmd --permanent --zone=public --add-rich-rule='rule family="ipv4" port protocol="tcp" port="6641" accept'

firewall-cmd --permanent --zone=public --add-rich-rule='rule family="ipv4" port protocol="tcp" port="6642" accept'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Stop iptables on the hosts (needed for OVN tunnels):&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl stop iptables
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After installation, the provider can be started as follows:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl start ovirt-provider-ovn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable the service in order to make it start at boot, use:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl enable ovirt-provider-ovn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since OVS 2.7, OVN central must be configured to listen to requests on appropriate ports:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ovn-sbctl set-connection ptcp:6642
ovn-nbctl set-connection ptcp:6641
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The provider can then be added to oVirt as an external network provider. In order to add a new provider, go to the External Providers section in the oVirt UI and click the Add button.&lt;/p&gt;

&lt;p&gt;&lt;img alt="adding a new provider" width="749" height="482" src="/images/new-ovirt-provider-ovn.png?1560777613" /&gt;&lt;/p&gt;

&lt;p&gt;When the provider is successfully added, existing OVN networks can be imported to oVirt.
New OVN networks can be defined using oVirt by adding a network and specifying it to be added on an external provider (make sure you add the external provider in read-write mode, so that you can add external networks from oVirt).&lt;/p&gt;

&lt;p&gt;A vNIC can be attached to OVN network by simply choosing an external network during NIC provisioning.&lt;/p&gt;

&lt;p&gt;OVN based networking brings many advantages to oVirt:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;More granular security - it brings complete network isolation without the need for defining VLANs.&lt;/li&gt;
  &lt;li&gt;Easier management - the management of the networking infrastructure should also become much easier, as instead of managing the network isolation on each of the networking components, it will be automatically taken care of by OVN.&lt;/li&gt;
  &lt;li&gt;Self service - the user can create many VM networks without troubling the network admin with vlan or infrastructure requests.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="building-ovirt-ovn-provider-rpms-from-repository"&gt;Building oVirt OVN Provider rpms from repository&lt;/h2&gt;

&lt;p&gt;Clone the repository:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://gerrit.ovirt.org/ovirt-provider-ovn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build the rpms:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd ovirt-provider-ovn
make rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The built rpms can be found in: &lt;code&gt;~/rpmbuild/RPMS/noarch/&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="building-ovn-rpms-from-repository"&gt;Building OVN rpms from repository&lt;/h2&gt;

&lt;p&gt;Note: for the most up-to-date description of building OVS resources please refer to &lt;a href="http://openvswitch.org"&gt;the OVS site&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clone the repository:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/openvswitch/ovs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install the following packages, as they are need to build ovn:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yum -y install gcc make python-devel openssl-devel kernel-devel graphviz kernel-debug-devel autoconf automake rpm-build redhat-rpm-config rpm-build rpmdevtools bash-completion autoconf automake libtool PyQt4 groff libcap-ng-devel python-twisted-core python-zope-interface graphviz openssl-devel selinux-policy-devel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build the ovn rpms:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd ovs
./boot.sh
./configure
make dist
cp openvswitch-&amp;lt;version&amp;gt;.tar.gz $HOME/rpmbuild/SOURCES
cd $HOME/rpmbuild/SOURCES
tar xzf openvswitch-&amp;lt;version&amp;gt;.tar.gz
cd openvswitch-&amp;lt;version&amp;gt;
rpmbuild -bb rhel/openvswitch-fedora.spec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The built rpms will reside here: &lt;code&gt;~/rpmbuild/RPMS/x86_64/&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="provider-setup-using-the-engine-setup-script"&gt;Provider setup using the engine-setup script&lt;/h2&gt;

&lt;p&gt;The provider can be set up on the engine host using the engine-setup tool.
The engine-setup tool is part of oVirt engine installation and is located in:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/bin/engine-setup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;During the setup process, engine-setup script will ask the user several questions related to OVN:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;Install ovirt-provider-ovn(Yes, No) [Yes]?:&lt;/code&gt;
If 'Yes', engine-setup will install ovirt-provider-ovn.
If engine-setup is used to update a system, this will only be asked if ovirt-provider-ovn has not been installed previously.
If you reply 'No', you will not be asked again on the next run of engine-setup. If you do want to get asked again, run engine-setup with '–reconfigure-optional-components'.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Use default credentials (admin@internal) for ovirt-provider-ovn(Yes, No) [Yes]?:&lt;/code&gt;
If 'Yes', engine-setup will use the default engine user and password specified earlier in the setup process.
This option is only available during new installations.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;oVirt OVN provider user[admin]:&lt;/code&gt;
 If the default credentials are not chosen, the user name which to use to connect to the provider.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;oVirt OVN provider password[empty]:&lt;/code&gt;
 If the default credentials are not chosen, the password to use to connect to the provider.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If used to set up ovirt-provider-ovn, engine-setup will perform the following tasks:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;install OVS and OVN packages on the engine&lt;/li&gt;
  &lt;li&gt;install ovirt-provider-ovn on the engine&lt;/li&gt;
  &lt;li&gt;add and configure a default External Network OVN provider. The engine provider will be configured to connect to provider on localhost. The provider will also be configured with the user and password specified during the setup process.&lt;/li&gt;
  &lt;li&gt;generate the PKI (public key infrastructure) for OVN north db, OVN southdb and ovirt-provider-ovn (shared key for serving https and comunicating with OVN north db)&lt;/li&gt;
  &lt;li&gt;configure the OVN north and south databases to use SSL&lt;/li&gt;
  &lt;li&gt;configure the provider to use https&lt;/li&gt;
  &lt;li&gt;configure the provider to connect to OVN north DB using SSL&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="configuring-pki-manually"&gt;Configuring PKI manually&lt;/h3&gt;

&lt;p&gt;The PKI (public key infrastructure) for the provider and driver are configured automatically by engine-setup and vdsm-tool.
In case where the provider is not installed together with ovirt-engine, PKI will need to be created and configured manually.&lt;/p&gt;

&lt;p&gt;In such a case, key/certificate pair signed by a common authority will be needed for the provider, ovn north db, ovn south db, and each of the ovn controllers.&lt;/p&gt;

&lt;p&gt;Some of the possible ways to generate key/certificate pairs are using &lt;a href="https://www.openssl.org/"&gt;OpenSSL&lt;/a&gt; or openvswitch &lt;a href="http://openvswitch.org/support/dist-docs/ovs-pki.8.txt"&gt;ovs-pki command&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The ovn north db must be configured using the following commands:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ovn-nbctl set-ssl &amp;lt;private key file&amp;gt; &amp;lt;certificate file&amp;gt; &amp;lt;ca certificate file&amp;gt;
ovn-nbctl set-connection pssl:6641
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The ovn south db must be configured using the following commands:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ovn-sbctl set-ssl &amp;lt;private key file&amp;gt; &amp;lt;certificate file&amp;gt; &amp;lt;ca certificate file&amp;gt;
ovn-sbctl set-connection pssl:6642
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The provider must be configured by setting the follwing values in the configuration file (/etc/ovirt-provider-ovn/ovirt-provider-ovn.conf):&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[SSL]
ssl_enabled=true # enables/disables https for the REST API
key-file=&amp;lt;private key file&amp;gt;
cert-file=&amp;lt;certificate file&amp;gt;
cacert-file=&amp;lt;ca certificate file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The PKI of the provider will be used to connect to the OVN north db, as well as for the https connection.
The CA certificate must used for signing the certificate must be added to the external provider trust store on the engine:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;keytool -import -alias &amp;lt;certificate alias&amp;gt; -keystore &amp;lt;key store file&amp;gt; -file &amp;lt;ca certificate file&amp;gt; -noprompt -storepass &amp;lt;store password&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The key store file and the store password are defined in &lt;code&gt;/usr/share/ovirt-engine/services/ovirt-engine/ovirt-engine.conf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The ovn-controller can be set up using the &lt;code&gt;setup_ovn_controller&lt;/code&gt; script (/usr/libexec/ovirt-provider-ovn/setup_ovn_controller.sh):&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;setup_ovn_controller.sh &amp;lt;OVN central IP&amp;gt; &amp;lt;local tunneling IP&amp;gt; &amp;lt;private key file&amp;gt; &amp;lt;certificate file&amp;gt; &amp;lt;ca certificate file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="tested-environments"&gt;Tested environments&lt;/h2&gt;

&lt;p&gt;This guide has been tested on both Fedora24 and RHEL7 environments.&lt;/p&gt;

&lt;p&gt;Note: Currently a OVS spec file for Fedora is the only available in the OVS repo. We are however using the generated rpm's on RHEL7 and have not encountered any problems so far. Please consult the OVS team for more info.&lt;/p&gt;

&lt;h2 id="useful-links"&gt;Useful Links&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://resources.ovirt.org/repos/mmirecki/ovirt-provider-ovn-1.0-1.fc24.noarch.rpm"&gt;ovirt-provider-ovn RPM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://resources.ovirt.org/repos/mmirecki/ovirt-provider-ovn-driver-1.0-1.fc24.noarch.rpm"&gt;ovirt-provider-ovn-driver RPMy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://jenkins.ovirt.org/job/ovirt-provider-ovn_master_build-artifacts-el7-x86_64/lastSuccessfulBuild/artifact/exported-artifacts/"&gt;Latest development build&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="https://gerrit.ovirt.org/#/q/project:ovirt-provider-ovn"&gt;Project repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.ovirt.org/develop/release-management/features/ovirt-ovn-provider/"&gt;oVirt provider for OVN&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.ovirt.org/develop/release-management/features/external-network-provider/"&gt;External network providers&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="http://openvswitch.org/support/dist-docs/"&gt;OVS ducumentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://openvswitch.org/support/dist-docs/ovn-architecture.7.html"&gt;OVN architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
  </entry>
  <entry>
    <title>Setting Community Values</title>
    <link rel="alternate" href="http://ovirt.org/blog/2016/11/setting-community-values.html"/>
    <id>http://ovirt.org/blog/2016/11/setting-community-values.html</id>
    <published>2016-11-01T11:10:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Brian Proffitt</name>
    </author>
    <content type="html">&lt;p&gt;The oVirt community is made up of a diverse mix of individuals using and contributing to all aspects of the project from all over the world, and we want to make sure that the community is a safe and friendly place for everyone.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;This code of conduct applies equally to founders, mentors, and those seeking help and guidance. It applies to all spaces managed by the oVirt project, including IRC, mailing lists, GitHub, Gerrit, oVirt events, and any other forums created by the project team which the community uses for communication.&lt;/p&gt;

&lt;p&gt;While we have contribution guidelines for specific tools, we expect all members of our community to follow these general guidelines and be accountable to the community. This isn’t an exhaustive list of things that you can’t do. Rather, take it in the spirit in which it’s intended—a guide to make it easier to enrich all of us and the technical communities in which we participate.&lt;/p&gt;

&lt;p&gt;To that end, some members of the oVirt community have put together a new &lt;a href="/community/about/community-guidelines/"&gt;Community Code of Conduct&lt;/a&gt; to help guide everyone through what it means to be respectful and tolerant in a global community like the oVirt Project.&lt;/p&gt;

&lt;p&gt;We're not looking for a community of zero conflict (though that would be nice). When you are working with a complex project with so many people involved, conflict is inevitable. These guidelines will hopefully help set the framework for managing such conflict. For me, it comes down to making sure that listening to the other side of the argument and respecting the person making the argument is always part of the equation.&lt;/p&gt;

&lt;p&gt;Like Bill and Ted said: "Be excellent to each other."&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Call For Proposals&amp;mdash;FOSDEM 2017 Virtualization &amp; IaaS DevRoom</title>
    <link rel="alternate" href="http://ovirt.org/blog/2016/10/call-for-proposal-fosdem-2017.html"/>
    <id>http://ovirt.org/blog/2016/10/call-for-proposal-fosdem-2017.html</id>
    <published>2016-10-13T10:45:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Brian Proffitt</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="FOSDEM logo" width="126" height="124" src="/images/fosdem.png?1560777613" /&gt; I am excited to announce that the call for proposals is now open for the Virtualization &amp;amp; IaaS devroom at the upcoming &lt;a href="https://fosdem.org/2017/"&gt;FOSDEM 2017&lt;/a&gt;, to be hosted on February 4, 2017.&lt;/p&gt;

&lt;p&gt;This year will mark FOSDEM’s 17th anniversary as one of the longest-running free and open source software developer events, attracting thousands of developers and users from all over the world. FOSDEM will be held once again in Brussels, Belgium, on February 4 &amp;amp; 5, 2017.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;This devroom is a collaborative effort, and is organized by dedicated folks from projects such as OpenStack, Xen Project, Mesos, oVirt, QEMU, and Foreman. We would like to invite all those who are involved in these fields to submit your proposals by November 18th, 2016.&lt;/p&gt;

&lt;h2 id="about-the-devroom"&gt;About the Devroom&lt;/h2&gt;

&lt;p&gt;The Virtualization &amp;amp; IaaS devroom will feature session topics such as open source hypervisors and virtual machine managers such as Xen Project, KVM, QEMU, bhyve, and VirtualBox, and Infrastructure-as-a-Service projects such as Apache CloudStack, OpenStack, oVirt, OpenNebula, and Ganeti.&lt;/p&gt;

&lt;p&gt;This devroom will host presentations that focus on topics of shared interest, such as KVM; libvirt; shared storage; virtualized networking; cloud security; clustering and high availability; interfacing with multiple hypervisors; hyperconverged deployments; and scaling across hundreds or thousands of servers.&lt;/p&gt;

&lt;p&gt;Presentations in this devroom will be aimed at developers working on these platforms who are looking to collaborate and improve shared infrastructure or solve common problems. We seek topics that encourage dialog between projects and continued work post-FOSDEM.&lt;/p&gt;

&lt;h2 id="important-dates"&gt;Important Dates&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Submission deadline:&lt;/strong&gt; 18 November 2016&lt;br /&gt;
&lt;strong&gt;Acceptance notifications:&lt;/strong&gt; 04 December 2016&lt;br /&gt;
&lt;strong&gt;Final schedule announcement:&lt;/strong&gt; 11 December 2016&lt;br /&gt;
&lt;strong&gt;Devroom:&lt;/strong&gt; 04 February 2017 (one day)&lt;/p&gt;

&lt;h2 id="submit-your-proposal"&gt;Submit Your Proposal&lt;/h2&gt;

&lt;p&gt;All submissions must be made via the &lt;a href="https://penta.fosdem.org/submission/FOSDEM17"&gt;Pentabarf event planning site&lt;/a&gt;. If you have not used Pentabarf before, you will need to create an account. If you submitted proposals for FOSDEM in previous years, you can use your existing account.&lt;/p&gt;

&lt;p&gt;After creating the account, select &lt;strong&gt;Create Event&lt;/strong&gt; to start the submission process. Make sure to select &lt;strong&gt;Virtualisation and IaaS devroom&lt;/strong&gt; from the Track list. Please fill out all the required fields, and provide a meaningful abstract and description of your proposed session.&lt;/p&gt;

&lt;h2 id="submission-guidelines"&gt;Submission Guidelines&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;We expect more proposals than we can possibly accept, so it is vitally important that you submit your proposal on or before the deadline. Late submissions are unlikely to be considered.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;All presentation slots are 45 minutes, with 35 minutes planned for presentations, and 10 minutes for Q&amp;amp;A.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;All presentations &lt;strong&gt;will&lt;/strong&gt; be recorded and made available under Creative Commons licenses. In the &lt;em&gt;Submission notes&lt;/em&gt; field, please indicate that you agree that your presentation will be licensed under the CC-By-SA-4.0 or CC-By-4.0 license and that you agree to have your presentation recorded. For example:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;"If my presentation is accepted for FOSDEM, I hereby agree to license all recordings, slides, and other associated materials under the Creative Commons Attribution Share-Alike 4.0 International License. Sincerely, &amp;lt;NAME&amp;gt;."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;In the &lt;em&gt;Submission notes&lt;/em&gt; field, please also confirm that if your talk is accepted, you &lt;strong&gt;will&lt;/strong&gt; be able to attend FOSDEM and deliver your presentation. We will not consider proposals from prospective speakers who are unsure whether they will be able to secure funds for travel and lodging to attend FOSDEM. (Sadly, we are not able to offer travel funding for prospective speakers.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="speaker-mentoring-program"&gt;Speaker Mentoring Program&lt;/h2&gt;

&lt;p&gt;As a part of the rising efforts to grow our communities and encourage a diverse and inclusive conference ecosystem, we're happy to announce that we'll be offering mentoring for new speakers. Our mentors can help you with tasks such as reviewing your abstract, reviewing your presentation outline or slides, or practicing your talk with you.&lt;/p&gt;

&lt;p&gt;You may apply to the mentoring program as a newcomer speaker if you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Never presented before or&lt;/li&gt;
  &lt;li&gt;Presented only lightning talks or&lt;/li&gt;
  &lt;li&gt;Presented full-length talks at small meetups (&amp;lt;50 ppl)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="submission-guidelines-1"&gt;Submission Guidelines&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Mentored presentations will have 25-minute slots, where 20 minutes will include the presentation and 5 minutes will be reserved for questions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The number of newcomer session slots is limited, so we will probably not be able to accept all applications.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You must submit your talk and abstract to apply for the mentoring program, our mentors are volunteering their time and will happily provide feedback but won't write your presentation for you!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are experiencing problems with Pentabarf, the proposal submission interface, or have other questions, you can email our &lt;a href="&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#105;&amp;#097;&amp;#097;&amp;#115;&amp;#045;&amp;#118;&amp;#105;&amp;#114;&amp;#116;&amp;#045;&amp;#100;&amp;#101;&amp;#118;&amp;#114;&amp;#111;&amp;#111;&amp;#109;&amp;#064;&amp;#108;&amp;#105;&amp;#115;&amp;#116;&amp;#115;&amp;#046;&amp;#102;&amp;#111;&amp;#115;&amp;#100;&amp;#101;&amp;#109;&amp;#046;&amp;#111;&amp;#114;&amp;#103;"&gt;devroom mailing list&lt;/a&gt; and we will try to help you.&lt;/p&gt;

&lt;h3 id="how-to-apply"&gt;How to Apply&lt;/h3&gt;

&lt;p&gt;In addition to agreeing to video recording and confirming that you can attend FOSDEM in case your session is accepted, please write "speaker mentoring program application" in the "Submission notes" field, and list any prior speaking experience or other relevant information for your application.&lt;/p&gt;

&lt;h3 id="call-for-mentors"&gt;Call for Mentors&lt;/h3&gt;

&lt;p&gt;Interested in mentoring newcomer speakers? We'd love to have your help! Please email iaas-virt-devroom at lists.fosdem.org with a short speaker biography and any specific fields of expertise (for example, KVM, OpenStack, storage, etc.) so that we can match you with a newcomer speaker from a similar field. Estimated time investment can be as low as a 5-10 hours in total, usually distributed weekly or bi-weekly.&lt;/p&gt;

&lt;p&gt;Never mentored a newcomer speaker but interested to try? As the mentoring program coordinator, I will be happy to answer your questions and give you tips on how to optimize the mentoring process. &lt;a href="&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#098;&amp;#107;&amp;#112;&amp;#064;&amp;#114;&amp;#101;&amp;#100;&amp;#104;&amp;#097;&amp;#116;&amp;#046;&amp;#099;&amp;#111;&amp;#109;"&gt;Email me&lt;/a&gt; and I'll be happy to answer your questions!&lt;/p&gt;

&lt;h2 id="code-of-conduct"&gt;Code of Conduct&lt;/h2&gt;

&lt;p&gt;Following the release of the updated &lt;a href="https://www.fosdem.org/2017/practical/conduct/"&gt;code of conduct for FOSDEM&lt;/a&gt;, we'd like to remind all speakers and attendees that all of the presentations and discussions in our devroom are held under the guidelines set in the CoC and we expect attendees, speakers, and volunteers to follow the CoC at all times.&lt;/p&gt;

&lt;p&gt;If you submit a proposal and it is accepted, you will be required to confirm that you accept the FOSDEM CoC. If you have any questions about the CoC or wish to have one of the devroom organizers review your presentation slides or any other content for CoC compliance, please email &lt;a href="&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#105;&amp;#097;&amp;#097;&amp;#115;&amp;#045;&amp;#118;&amp;#105;&amp;#114;&amp;#116;&amp;#045;&amp;#100;&amp;#101;&amp;#118;&amp;#114;&amp;#111;&amp;#111;&amp;#109;&amp;#064;&amp;#108;&amp;#105;&amp;#115;&amp;#116;&amp;#115;&amp;#046;&amp;#102;&amp;#111;&amp;#115;&amp;#100;&amp;#101;&amp;#109;&amp;#046;&amp;#111;&amp;#114;&amp;#103;"&gt;us&lt;/a&gt; and we will do our best to assist you.&lt;/p&gt;

&lt;h2 id="call-for-volunteers"&gt;Call for Volunteers&lt;/h2&gt;

&lt;p&gt;We are also looking for volunteers to help run the devroom. We need assistance watching time for the speakers, and helping with video for the devroom. Please contact me, &lt;a href="&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#098;&amp;#107;&amp;#112;&amp;#064;&amp;#114;&amp;#101;&amp;#100;&amp;#104;&amp;#097;&amp;#116;&amp;#046;&amp;#099;&amp;#111;&amp;#109;"&gt;Brian Proffitt&lt;/a&gt;, for more information.&lt;/p&gt;

&lt;h2 id="questions"&gt;Questions?&lt;/h2&gt;

&lt;p&gt;If you have any questions about this devroom, please send your questions to our &lt;a href="&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#105;&amp;#097;&amp;#097;&amp;#115;&amp;#045;&amp;#118;&amp;#105;&amp;#114;&amp;#116;&amp;#045;&amp;#100;&amp;#101;&amp;#118;&amp;#114;&amp;#111;&amp;#111;&amp;#109;&amp;#064;&amp;#108;&amp;#105;&amp;#115;&amp;#116;&amp;#115;&amp;#046;&amp;#102;&amp;#111;&amp;#115;&amp;#100;&amp;#101;&amp;#109;&amp;#046;&amp;#111;&amp;#114;&amp;#103;"&gt;devroom mailing list&lt;/a&gt;. You can also subscribe to the list to receive updates about important dates, session announcements, and to connect with other attendees.&lt;/p&gt;

&lt;p&gt;See you all at FOSDEM!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>oVirt Engine 4.0 Installation Issues on Fedora 24</title>
    <link rel="alternate" href="http://ovirt.org/blog/2016/07/ovirt-engine-4-setup-in-fedora24.html"/>
    <id>http://ovirt.org/blog/2016/07/ovirt-engine-4-setup-in-fedora24.html</id>
    <published>2016-07-26T16:30:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Yanir Quinn</name>
    </author>
    <content type="html">&lt;p&gt;This blog post relates to oVirt Engine release 4.0 installation on Fedora 24 and probably is relevant for earlier oVirt releases.
Having Fedora 24 (Twenty Four) installed on my new laptop (while it was still in beta phase, but this is still relevant for GA),
I ran an oVirt installation and encountered the following error message:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ovirt-engine[5566] ERROR run:532 Error: Unable to change process owner ([Errno 1] Operation not permitted)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is an outcome of permission problems with python-daemon 2.1.0, which is the default package in the Fedora 24 release.&lt;/p&gt;

&lt;p&gt;To overcome this issue, I had to downgrade the python-daemon version to 2.0.6 (e.g., &lt;code&gt;sudo pip install python-daemon==2.0.6&lt;/code&gt;,
a reference to similar general issue can be found here: https://groups.google.com/forum/#!topic/pywws/I0c_RW4DRzg)&lt;/p&gt;

&lt;p&gt;Any further issues related to oVirt installation and Fedora 24 will be added to this blog post.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Subclusters in oVirt 4.0 - Label-Based VM to Host Affinity</title>
    <link rel="alternate" href="http://ovirt.org/blog/2016/07/affinity-labels.html"/>
    <id>http://ovirt.org/blog/2016/07/affinity-labels.html</id>
    <published>2016-07-25T15:00:00+00:00</published>
    <updated>2019-06-16T09:04:04+00:00</updated>
    <author>
      <name>Martin Sivak</name>
    </author>
    <content type="html">&lt;p&gt;Before I start discussing the feature itself I have to explain a bit about the use cases that we were trying to solve.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Let us imagine you have a special piece of software with a node-licensing model that only cares about physical machines when counting the number of licenses needed. This specifically allows you to run that software in virtual machines, but you need to control the physical host on which the VMs are running.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The other case is basically related to hardware capabilities. Some NICs might be faster than others and you want to place all high traffic VMs on hosts that have them. Or a special custom device is needed and VMs that need it won’t run on a host that does not have it.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Both cases follow the same basic scenario: There is a small subset of VMs that need a special capability (license, device), but there are not enough of them to fully utilize a separate cluster. To achieve efficient utilization of your cluster, you need to add many common VMs with no special needs and some hosts to handle the full load. But… how do you keep the special VMs from migrating to the hosts without the special capabilities?&lt;/p&gt;

&lt;p&gt;We already had &lt;a href="/documentation/admin-guide/administration-guide/#affinity-groups"&gt;VM to host pinning&lt;/a&gt; that allowed limiting VM placement to &lt;a href="/develop/release-management/features/vmpinningtomultiplehosts/"&gt;single or multiple hosts&lt;/a&gt;, but with no migration enabled for that VM. Our team also just implemented a new feature that allows you to define pinning and still keep migration enabled. Affinity labels allow you to take a subset of hosts and attach a label to them. Any VM with the same affinity label will be then constrained to the labeled hosts. Standard VMs with no labels won’t notice anything and will still happily run anywhere according to the normal oVirt scheduling rules.&lt;/p&gt;

&lt;p&gt;Now the bad news, there is no edit enabled user interface for now and all changes need to be done using the oVirt engine REST API. We have a development version of read only view for host and VM to affinity label assignments for getting a quick overview of the configuration and we plan to have full fledged UI in the future.&lt;/p&gt;

&lt;p&gt;The rest of this post will show you how to implement an example setup with three groups of hosts: webserver, storage and applications:&lt;/p&gt;

&lt;p&gt;&lt;img alt="Example affinity groups layout" width="300" height="370" src="/images/affinity-label-example-diagram.png?1560777613" /&gt;&lt;/p&gt;

&lt;p&gt;I will be using my local server &lt;code&gt;localhost:8080&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;jq&lt;/code&gt;, and a specially crafted shell alias to avoid repeating the login and content type parameters in every example call. Tweak the admin@internal user and letmein password to match the user you will be using. Please note that if you are not using the admin account then you need to make sure the user has the &lt;em&gt;TagManager&lt;/em&gt; permissions.&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;alias cengine='curl -s -u admin@internal:letmein -H "Content-Type: application/json" -H "Accept: application/json"'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="creating-and-updating-a-label"&gt;Creating and Updating a Label&lt;/h2&gt;

&lt;p&gt;Creating a new affinity label is a straightforward operation, just send a POST request to the right endpoint while saving the ID to a variable:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ STORAGELABEL=$(cengine -f -X POST -d '{"name": "test"}' http://localhost:8080/ovirt-engine/api/affinitylabels | jq -r '.id'); echo $STORAGELABEL

cc8bcf08-bc78-40e9-a01a-38a0fe99ea26
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Operations for listing all labels and updating a label’s name are also supported, of course:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cengine -f http://localhost:8080/ovirt-engine/api/affinitylabels | jq -r '.affinity_label[] | {id, name}'

{
  "id": "cc8bcf08-bc78-40e9-a01a-38a0fe99ea26",
  "name": "test"
}

cengine -X PUT -d '{"name": "storage_subcluster"}' http://localhost:8080/ovirt-engine/api/affinitylabels/$STORAGELABEL | jq -r '{id, name}'

{
  "id": "cc8bcf08-bc78-40e9-a01a-38a0fe99ea26",
  "name": "storage_subcluster"
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="attaching-hosts-and-vms-to-a-label"&gt;Attaching Hosts and VMs to a Label&lt;/h2&gt;

&lt;p&gt;Affinity labels reference all labeled objects using their id, although the API accepts the full object representation. It will ignore all fields except id, though. There are two ways to manipulate affinity label assignments to hosts and VMs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Posting the host or VM to the proper affinity label subcollection&lt;/li&gt;
  &lt;li&gt;Posting the affinity label to the host’s or VM’s affinitylabels subcollection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We need some VMs and Hosts for the following examples so create hosts red, green, and blue as well as some VMs: webserver, storage, application1, and application2.&lt;/p&gt;

&lt;p&gt;I will now show you how to express the following rules using the affinity labels:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Webserver VM should be allowed to run anywhere&lt;/li&gt;
  &lt;li&gt;Storage VM should be restricted to host red (special HBA card maybe?)&lt;/li&gt;
  &lt;li&gt;Application VMs should be restricted to hosts red and blue (as you have license for two physical nodes, for example)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will first attach the storage VM and the red host to the already created storage_subcluster affinity label:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cengine -f -X POST -d "{\"id\": \"$REDHOSTID\"}" http://localhost:8080/ovirt-engine/api/affinitylabels/$STORAGELABEL/hosts | jq -r '.status'

complete

$ cengine -f -X POST -d "{\"id\": \"$STORAGEVMID\"}" http://localhost:8080/ovirt-engine/api/affinitylabels/$STORAGELABEL/vms | jq -r '.status'

complete
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can create the application affinity group and attach the necessary hosts and VMs:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ APPLABEL=$(cengine -f -X POST -d '{"name": "app_subcluster"}' http://localhost:8080/ovirt-engine/api/affinitylabels | jq -r '.id'); echo $APPLABEL

d7d91849-262d-4274-bb47-3ad711566fc7

$ for host in $REDHOSTID $BLUEHOSTID; do cengine -f -X POST -d "{\"id\": \"$APPLABEL\"}" http://localhost:8080/ovirt-engine/api/hosts/$host/affinitylabels | jq -r '.status'; done

completed
completed

$ for vm in $APP1VMID $APP2VMID; do cengine -f -X POST -d "{\"id\": \"$APPLABEL\"}" http://localhost:8080/ovirt-engine/api/vms/$vm/affinitylabels | jq -r '.status'; done

completed
completed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="deleting-labels-or-assignments"&gt;Deleting Labels or Assignments&lt;/h2&gt;

&lt;p&gt;That concludes the setup. You can use a standard REST DELETE call in case you need to remove a label to host assignment (just replace hosts with VMs to make it work for label to VM assignments):&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cengine -f -X DELETE http://localhost:8080/ovirt-engine/api/hosts/$hostid/affinitylabels/$labelid | jq -r '.status'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cengine -f -X DELETE http://localhost:8080/ovirt-engine/api/affinitylabels/$labelid/hosts/$hostid | jq -r '.status'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="the-result"&gt;The Result&lt;/h2&gt;

&lt;p&gt;The situation now is as described at the beginning, and will be obeyed during VM startups and VM migrations.&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cengine -f http://localhost:8080/ovirt-engine/api/affinitylabels | jq -r '.affinity_label[] | {id, name, vms, hosts}'

{
  "id": "cc8bcf08-bc78-40e9-a01a-38a0fe99ea26",
  "name": "storage_subcluster",
  "vms": {
    "vm": [
      {“id": "bd6e32cd-1df5-4c5c-a44e-371371e44168"}
    ]
  },
  "hosts": {
    "host": [
      {"id": "4d711089-a3e3-45b7-935a-dc66c4c4ccef"}
    ]
  }
}
{
  "id": "d7d91849-262d-4274-bb47-3ad711566fc7",
  "name": "app_subcluster",
  "vms": {
    "vm": [
      {"id": "a98d58ee-73e4-40be-95f8-bf360e646473"},
      {"id": "7506d8f9-7b40-4ee2-85be-6a7b02024729"}
    ]
  },
  "hosts": {
    "host": [
      {"id": "e2715dfc-5e21-45c1-9e9e-c2d316dc51dd"},
      {"id": "4d711089-a3e3-45b7-935a-dc66c4c4ccef"}
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I hope this new feature will be useful for you, and should you have any questions, do not hesitate to ask on &lt;a href="&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#117;&amp;#115;&amp;#101;&amp;#114;&amp;#115;&amp;#064;&amp;#111;&amp;#118;&amp;#105;&amp;#114;&amp;#116;&amp;#046;&amp;#111;&amp;#114;&amp;#103;"&gt;&amp;#117;&amp;#115;&amp;#101;&amp;#114;&amp;#115;&amp;#064;&amp;#111;&amp;#118;&amp;#105;&amp;#114;&amp;#116;&amp;#046;&amp;#111;&amp;#114;&amp;#103;&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
</feed>
